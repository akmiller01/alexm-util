latitude <- as.double(attribute$coordinates["latitude"])
longitude <- as.double(attribute$coordinates["longitude"])
}
}
}
data <- data.frame(location.name,longitude,latitude,total.value)
dataList[[dataIndex]] <- data
dataIndex <- dataIndex + 1
}
}
metaData <- rbindlist(dataList)
write.csv(metaData,"Uganda_AMP_locations.csv",row.names=FALSE,na="")
View(metaData)
amp[2]
names(amp[2])
names(amp[[2]])
metaData < metaData[complete.cases(metaData),]
metaData <- metaData[complete.cases(metaData),]
write.csv(metaData,"Uganda_AMP_locations.csv",row.names=FALSE,na="")
names(amp[2])
names(amp[[2]])
amp[[1]]
amp[[1]]$transaction
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
i <- 1
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(yesterday)
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
View(data)
?grep
grep("refug",data$Actor1Name,ignore.case=TRUE)
data$Actor1Name[47441]
data$Actor1Name[grep("refug",data$Actor1Name,ignore.case=TRUE),]
data$Actor1Name[grep("refug",data$Actor1Name,ignore.case=TRUE)]
data$Actor1Name[grep("migr",data$Actor1Name,ignore.case=TRUE)]
data$Actor1Name[grep("migrant",data$Actor1Name,ignore.case=TRUE)]
data$Actor1Name[grep("displa",data$Actor1Name,ignore.case=TRUE)]
refugees <- data[which(grepl("refugee",data$Actor1Code,ignore.case=TRUE)),]
grepl("refugee",data$Actor1Code,ignore.case=TRUE)
refugees <- data[which(grepl("refugee",data$Actor1Name,ignore.case=TRUE)),]
refugees <- data[which(grepl("refugee",data$Actor1Name,ignore.case=TRUE) | grepl("refugee",data$Actor2Name,ignore.case=TRUE)),]
refugees <- data[which(grepl("refugee",data$Actor1Name,ignore.case=TRUE) | grepl("refugee",data$Actor2Name,ignore.case=TRUE)),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
idps <- data[which(grepl("displaced",data$Actor1Name,ignore.case=TRUE) | grepl("displaced",data$Actor2Name,ignore.case=TRUE)),]
View(idps)
data$Actor1Code[which(data$Actor1Code=="REF")]
data$Actor1Name[which(data$Actor1Code=="REF")]
View(migrants)
data$Actor1Name[which(data$Actor1Code=="CVL")]
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
View(refugees.idps)
refIdpMig <- rbind(refgees.idps,migrants)
refIdpMig <- rbind(refugees.idps,migrants)
View(refIdpMig)
View(data)
View(data)
View(data)
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
for(i in 1:5){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(yesterday)
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
refIdpMig <- rbind(refugees.idps,migrants)
if(exists("reports")){
reports <- rbind(refIdpMig,reports)
}
else{
reports <- refIdpMig
}
}
reports.tab <- data.table(reports)
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone <- mean(AvgTone,na.rm=TRUE)
),by=.(SQLDATE,ActionGeo_CountryCode)
]
warnings()
View(reports)
typ-
|
typeof(reports$AvgTone)
reports$AvgTone <- as.double(reports$AvgTone)
reports.tab <- data.table(reports)
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone <- mean(AvgTone,na.rm=TRUE)
),by=.(SQLDATE,ActionGeo_CountryCode)
]
View(df)
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone = mean(AvgTone,na.rm=TRUE)
),by=.(SQLDATE,ActionGeo_CountryCode)
]
View(df)
df[order(df$count),]
df <- df[order(-df$count),]
View(df)
?head
head(df)
df <- df[order(-df$avgTone),]
head(df)
df <- df[order(df$avgTone),]
head(df)
tag <- function(df){
if(df$Actor1Code=="REF" | df$Actor1Code=="REF"){
return("Refugees and IDPs")
}else{
return("Migrants and immigrants")
}
}
reports$tag <- tag(reports)
tag <- function(df){
if(df$Actor1Code=="REF" | df$Actor2Code=="REF"){
return("Refugees and IDPs")
}else{
return("Migrants and immigrants")
}
}
reports$tag <- sapply(df,tag)
tag <- function(data){
tags <- c()
for(i in 1:nrow(data)){
df <- data[i,]
if(df$Actor1Code=="REF" | df$Actor2Code=="REF"){
tag <- "Refugees and IDPs"
}else{
tag <- "Migrants and immigrants"
}
tags <- c(tags,tag)
}
return(tags)
}
reports$tag <- tag(reports)
describe(reports$tag)
reports$AvgTone <- as.double(reports$AvgTone)
tag <- function(data){
tags <- c()
for(i in 1:nrow(data)){
df <- data[i,]
if(df$Actor1Code=="REF" | df$Actor2Code=="REF"){
tag <- "Refugees and IDPs"
}else{
tag <- "Migrants and immigrants"
}
tags <- c(tags,tag)
}
return(tags)
}
reports$tag <- tag(reports)
reports.tab <- data.table(reports)
# df <- reports.tab[,.(
#   count=sum(!is.na(GLOBALEVENTID))
#   ,avgTone = mean(AvgTone,na.rm=TRUE)
#   ),by=.(SQLDATE,tag,ActionGeo_CountryCode)
#   ]
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone = mean(AvgTone,na.rm=TRUE)
),by=.(tag,ActionGeo_CountryCode)
]
View(df)
df <- df[order(-df$count),]
head(df)
df <- df[order(-df$avgTone),]
head(df)
reports$tag <- NA
reports$tag[which(reports$Actor1Code=="REF" | reports$Actor2Code=="REF")] <- "Refugees and IDPs"
reports$tag[which(is.na(reports$tag))] <- "Migrants and immigrants"
describe(reports$tag)
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
for(i in 1:100){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(yesterday)
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
refIdpMig <- rbind(refugees.idps,migrants)
if(exists("reports")){
reports <- rbind(refIdpMig,reports)
}
else{
reports <- refIdpMig
}
}
rbindlist
Sys.Date()
paste0("D:/Documents/Data/GDELT/refugees and migrant reports",Sys.Date(),".RData"
)
paste0("D:/Documents/Data/GDELT/ref-reports-",Sys.Date(),".RData")
paste0("D:/Documents/Data/GDELT/ref reports ",Sys.Date(),".RData")
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
dataList <- list()
dataIndex <- 1
for(i in 1:5){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(yesterday)
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
refIdpMig <- rbind(refugees.idps,migrants)
dataList[[dataIndex]] <- refIdpMig
dataIndex <- dataIndex + 1
}
reports <- rbindlist(dataList)
reports$AvgTone <- as.double(reports$AvgTone)
reports$tag <- NA
reports$tag[which(reports$Actor1Code=="REF" | reports$Actor2Code=="REF")] <- "Refugees and IDPs"
reports$tag[which(is.na(reports$tag))] <- "Migrants and immigrants"
save(reports,file=paste0("D:/Documents/Data/GDELT/ref reports ",Sys.Date(),".RData"))
reports.tab <- data.table(reports)
# df <- reports.tab[,.(
#   count=sum(!is.na(GLOBALEVENTID))
#   ,avgTone = mean(AvgTone,na.rm=TRUE)
#   ),by=.(SQLDATE,tag,ActionGeo_CountryCode)
#   ]
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone = mean(AvgTone,na.rm=TRUE)
),by=.(tag,ActionGeo_CountryCode)
]
write.csv(df,"D:/Documents/Data/GDELT/refugees and migrants.csv",row.names=FALSE,na="")
describe(reports$tag)
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
dataList <- list()
dataIndex <- 1
for(i in 1:100){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(paste(i,yesterday))
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
refIdpMig <- rbind(refugees.idps,migrants)
dataList[[dataIndex]] <- refIdpMig
dataIndex <- dataIndex + 1
}
reports <- rbindlist(dataList)
reports$AvgTone <- as.double(reports$AvgTone)
reports$tag <- NA
reports$tag[which(reports$Actor1Code=="REF" | reports$Actor2Code=="REF")] <- "Refugees and IDPs"
reports$tag[which(is.na(reports$tag))] <- "Migrants and immigrants"
reports$positive <- AvgTone >= 0
reports$positive <- reports$AvgTone >= 0
describe(reports$positive)
reports.tab <- data.table(reports)
# df <- reports.tab[,.(
#   count=sum(!is.na(GLOBALEVENTID))
#   ,avgTone = mean(AvgTone,na.rm=TRUE)
#   ),by=.(SQLDATE,tag,ActionGeo_CountryCode)
#   ]
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone = mean(AvgTone,na.rm=TRUE)
),by=.(tag,ActionGeo_CountryCode,positive)
]
View(df)
library(rCharts)
library(plyr)
wd <-"D:/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
dataList <- list()
dataIndex <- 1
for(i in 1:100){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(paste(i,yesterday))
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
refugees.idps <- data[which(data$Actor1Code=="REF" | data$Actor2Code=="REF"),]
migrants <- data[which(grepl("migrant",data$Actor1Name,ignore.case=TRUE) | grepl("migrant",data$Actor2Name,ignore.case=TRUE)),]
refIdpMig <- rbind(refugees.idps,migrants)
dataList[[dataIndex]] <- refIdpMig
dataIndex <- dataIndex + 1
}
reports <- rbindlist(dataList)
reports$AvgTone <- as.double(reports$AvgTone)
reports$tag <- NA
reports$tag[which(reports$Actor1Code=="REF" | reports$Actor2Code=="REF")] <- "Refugees and IDPs"
reports$tag[which(is.na(reports$tag))] <- "Migrants and immigrants"
reports$positive <- reports$AvgTone >= 0
save(reports,file=paste0("D:/Documents/Data/GDELT/ref reports ",Sys.Date(),".RData"))
reports.tab <- data.table(reports)
# df <- reports.tab[,.(
#   count=sum(!is.na(GLOBALEVENTID))
#   ,avgTone = mean(AvgTone,na.rm=TRUE)
#   ),by=.(SQLDATE,tag,ActionGeo_CountryCode)
#   ]
df <- reports.tab[,.(
count=sum(!is.na(GLOBALEVENTID))
,avgTone = mean(AvgTone,na.rm=TRUE)
),by=.(tag,ActionGeo_CountryCode,positive)
]
write.csv(df,"D:/Documents/Data/GDELT/refugees and migrants.csv",row.names=FALSE,na="")
write.csv(subset(df,tag=="Refugees and IDPs" & positive==TRUE),"D:/Documents/Data/GDELT/pos-refugee.csv",row.names=FALSE,na="")
write.csv(subset(df,tag=="Refugees and IDPs" & positive==FALSE),"D:/Documents/Data/GDELT/neg-refugee.csv",row.names=FALSE,na="")
write.csv(subset(df,tag=="Migrants and immigrants" & positive==TRUE),"D:/Documents/Data/GDELT/pos-migrants.csv",row.names=FALSE,na="")
write.csv(subset(df,tag=="Migrants and immigrants" & positive==FALSE),"D:/Documents/Data/GDELT/neg-migrants.csv",row.names=FALSE,na="")
write.csv(subset(reports,tag=="Refugees and IDPs"),"D:/Documents/Data/GDELT/refugee reports.csv")
write.csv(subset(reports,tag=="Migrants and immigrants"),"D:/Documents/Data/GDELT/migrant reports.csv")
#By Alex Miller
#install.packages("plyr")
library(plyr)
wd <- "D:/Documents/external/Ugandan Budget Data/"
setwd(wd)
#Define the datasets we want to work with
datasets <- c("2009-10 Approved Estimates.csv"
,"2010-11 Approved Estimates.csv"
,"2011-12 Approved Estimates.csv"
,"2012-13 Approved Estimates.csv"
,"2013-14 Draft Detailed Estimates 10.7.13.csv"
,"2014-15 Approved Estimates.csv"
,"2015-16 Draft Estimates Vol 1.csv"
)
#Iterate through the datasets
data <- read.csv(datasets[1],header=T,as.is=T,na.strings="")
for(i in 2:length(datasets)){
dataset <- datasets[i]
#Read it in
dat <- read.csv(dataset,header=T,as.is=T,na.strings="")
common_cols <- intersect(names(data),names(dat))
dat <- dat[common_cols]
data <- rbind(data[common_cols],dat)
}
data$Budget <- as.numeric(gsub(",","",data$Budget))
refugees <- subset(data, grepl("efugee", Department) | grepl("efugee",Economic.Function) | grepl("efugee",Output) | grepl("efugee",Programme))
refByYear <- ddply(refugees,.(year),summarize,ref=sum(Budget,na.rm=TRUE))
totByYear <- ddply(data,.(year),summarize,tot=sum(Budget,na.rm=TRUE))
refByYear <- merge(refByYear,totByYear,by=c("year"))
refByYear <- transform(refByYear,refPer = (ref/tot))
library(ggplot2)
library(scales)
q <- ggplot(refByYear, aes(x=year, y=refPer))
q <- q + geom_bar(stat="identity")
q <- q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- q + ylab("Percent of National Budget Pertaining to Refugees")
q <- q + scale_y_continuous(labels=percent)
q
p <- ggplot(totByYear, aes(x=year, y=tot))
p <- p + geom_bar(stat="identity")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + ylab("Total National Budget")
p
View(data)
library(Hmisc)
describe(data$vote)
describe(data$Vote)
#By Alex Miller
#install.packages("plyr")
library(plyr)
wd <- "C:/git/alexm-util/DevInit/Uganda/Spotlight"
setwd(wd)
#Define the datasets we want to work with
datasets <- c("Expenditure-15-16.csv"
,"Expenditure-15-16-missing.csv"
)
#Iterate through the datasets
data <- read.csv(datasets[1],header=T,as.is=T,na.strings="")
for(i in 2:length(datasets)){
dataset <- datasets[i]
#Read it in
dat <- read.csv(dataset,header=T,as.is=T,na.strings="")
common_cols <- intersect(names(data),names(dat))
dat <- dat[common_cols]
data <- rbind(data[common_cols],dat)
}
View(data)
data$Value <- as.numeric(gsub(",","",data$Value))
View(data)
names(data)
View(data)
refugees <- subset(data, grepl("efugee", Workplan) | grepl("efugee",Revenue.Source))
