installed.packages()
list.of.packages <- c("RPostgreSQL")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
list.of.packages <- c("RPostgreSQL")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(RPostgreSQL)
cred <- readLines("C:/Users/Alex/Documents/ddw.txt")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv
,dbname=cred[5]
,host = cred[2]
,port = as.numeric(cred[3])
,user = cred[1]
,password = cred[4]
)
# tables <- dbListTables(con)
schemaListTables <- function(schema){
query <- paste0("SELECT table_name FROM information_schema.tables
WHERE table_schema='",schema,"'")
return(dbGetQuery(con,query)$table_name)
}
# facts <- schemaListTables("fact")
ddw <- function(schemaTable){
split <- strsplit(schemaTable,".",fixed=TRUE)[[1]]
if(length(split)==2){
schema <- split[1]
table <- split[2]
schemaTables <- schemaListTables(schema)
if(table %in% schemaTables){
return(dbReadTable(con,table))
}else{
return(data.frame())
}
}else{
allTables <- dbListTables(con)
if(schemaTable %in% allTables){
return(dbReadTable(con,schemaTable))
}else{
return(data.frame())
}
}
}
rm(cred,drv,list.of.packages,new.packages)
# dat <- dlTableIfExists(con,"fact.population_total")
ddw("latest_census")
schemaListTables("data_series")
pov = ddw("poverty_190")
View(pov)
source("https://github.com/akmiller01/alexm-util/blob/master/DevInit/R/ddw/connect.R")
source("https://raw.githubusercontent.com/akmiller01/alexm-util/master/DevInit/R/ddw/connect.R")
ddw("poverty_190")
crs = ddw("oda.2015")
crs = ddw("oda_2015")
View(crs)
disconnect(con)
unique(crs$bundle)
list.of.packages <- c("RPostgreSQL")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(RPostgreSQL)
cred <- readLines("~/ddw.txt")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv
,dbname=cred[5]
,host = cred[2]
,port = as.numeric(cred[3])
,user = cred[1]
,password = cred[4]
)
schemaListTables <- function(schema){
query <- paste0("SELECT table_name FROM information_schema.tables
WHERE table_schema='",schema,"'")
return(dbGetQuery(con,query)$table_name)
}
schemaListTables("dimension")
dims = schemaListTables("dimension")
dims[order(dims)]
disconnect(con)
dbDisconnect(con)
substr("oecd_crs_channel_code_5_digit_to_itep_channel_web_id_map",1,30)
wanted = c(
"di_itep_channel"
,"oecd_crs_channel_code_5_digit"
,"oecd_crs_channel_code_5_digit_to_di_itep_channel_map"
,"oecd_crs_channel_code_5_digit_to_itep_channel_web_id_map"
,"di_itep_sector"
,"oecd_crs_purpose_code_5_digit"
,"oecd_crs_purpose_code_5_digit_to_di_itep_sector_map"
,"oecd_crs_purpose_code_5_digit_to_itep_sector_web_id_map"
,"oecd_crs_sector_code_3_digit"
,"oecd_crs_sector_code_3_digit_to_di_itep_sector_map"
,"oecd_crs_sector_code_3_digit_to_itep_sector_web_id_map"
)
short.names = gsub("oecd_crs_","",wanted)
nchar(short.names)
short.names = substr(gsub("oecd_crs_","",wanted),1,30)
nchar(short.names)
short.names
unique(short.names)
?gsub
short.names = substr(gsub("oecd_crs_|_code_|5_digit|3_digit","",wanted),1,30)
short.names
ddw("di_itep_channel")
list.of.packages <- c("RPostgreSQL","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(RPostgreSQL)
cred <- readLines("~/ddw.txt")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv
,dbname=cred[5]
,host = cred[2]
,port = as.numeric(cred[3])
,user = cred[1]
,password = cred[4]
)
schemaListTables <- function(schema){
query <- paste0("SELECT table_name FROM information_schema.tables
WHERE table_schema='",schema,"'")
return(dbGetQuery(con,query)$table_name)
}
ddw <- function(schemaTable){
split <- strsplit(schemaTable,".",fixed=TRUE)[[1]]
if(length(split)==2){
schema <- split[1]
table <- split[2]
schemaTables <- schemaListTables(schema)
if(table %in% schemaTables){
return(dbReadTable(con,table))
}else{
return(data.frame())
}
}else{
allTables <- dbListTables(con)
if(schemaTable %in% allTables){
return(dbReadTable(con,schemaTable))
}else{
return(data.frame())
}
}
}
rm(cred,drv,list.of.packages,new.packages)
ddw("di_itep_channel")
getwd()
list.of.packages <- c("RPostgreSQL","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
setwd("/home/alex/git/alexm-util/DevInit/R/ddw")
cred <- readLines("~/ddw.txt")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv
,dbname=cred[5]
,host = cred[2]
,port = as.numeric(cred[3])
,user = cred[1]
,password = cred[4]
)
schemaListTables <- function(schema){
query <- paste0("SELECT table_name FROM information_schema.tables
WHERE table_schema='",schema,"'")
return(dbGetQuery(con,query)$table_name)
}
ddw <- function(schemaTable){
split <- strsplit(schemaTable,".",fixed=TRUE)[[1]]
if(length(split)==2){
schema <- split[1]
table <- split[2]
schemaTables <- schemaListTables(schema)
if(table %in% schemaTables){
return(dbReadTable(con,table))
}else{
return(data.frame())
}
}else{
allTables <- dbListTables(con)
if(schemaTable %in% allTables){
return(dbReadTable(con,schemaTable))
}else{
return(data.frame())
}
}
}
rm(cred,drv,list.of.packages,new.packages)
wants = c(
"di_itep_channel"
,"oecd_crs_channel_code_5_digit"
,"oecd_crs_channel_code_5_digit_to_di_itep_channel_map"
,"oecd_crs_channel_code_5_digit_to_itep_channel_web_id_map"
,"di_itep_sector"
,"oecd_crs_purpose_code_5_digit"
,"oecd_crs_purpose_code_5_digit_to_di_itep_sector_map"
,"oecd_crs_purpose_code_5_digit_to_itep_sector_web_id_map"
,"oecd_crs_sector_code_3_digit"
,"oecd_crs_sector_code_3_digit_to_di_itep_sector_map"
,"oecd_crs_sector_code_3_digit_to_itep_sector_web_id_map"
)
short.names = substr(gsub("oecd_crs_|_code_|5_digit|3_digit","",wants),1,30)
wb = createWorkbook()
tables = list()
for(i in 1:length(wants)){
want = wants[i]
table.name = short.names[i]
table = ddw(want)
addWorksheet(wb,table.name)
writeData(wb,table.name,table)
}
saveWorkbook(wb,"dims.xlsx",overwrite=T)
dbDisconnect(con)
list.of.packages <- c("RPostgreSQL","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
setwd("/home/alex/git/alexm-util/DevInit/R/ddw")
cred <- readLines("~/ddw.txt")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv
,dbname=cred[5]
,host = cred[2]
,port = as.numeric(cred[3])
,user = cred[1]
,password = cred[4]
)
schemaListTables <- function(schema){
query <- paste0("SELECT table_name FROM information_schema.tables
WHERE table_schema='",schema,"'")
return(dbGetQuery(con,query)$table_name)
}
ddw <- function(schemaTable){
split <- strsplit(schemaTable,".",fixed=TRUE)[[1]]
if(length(split)==2){
schema <- split[1]
table <- split[2]
schemaTables <- schemaListTables(schema)
if(table %in% schemaTables){
return(dbReadTable(con,table))
}else{
return(data.frame())
}
}else{
allTables <- dbListTables(con)
if(schemaTable %in% allTables){
return(dbReadTable(con,schemaTable))
}else{
return(data.frame())
}
}
}
rm(cred,drv,list.of.packages,new.packages)
wants = c(
"di_itep_channel"
,"oecd_crs_channel_code_5_digit"
,"oecd_crs_channel_code_5_digit_to_di_itep_channel_map"
,"oecd_crs_channel_code_5_digit_to_itep_channel_web_id_map"
,"di_itep_sector"
,"oecd_crs_purpose_code_5_digit"
,"oecd_crs_purpose_code_5_digit_to_di_itep_sector_map"
,"oecd_crs_purpose_code_5_digit_to_itep_sector_web_id_map"
,"oecd_crs_sector_code_3_digit"
,"oecd_crs_sector_code_3_digit_to_di_itep_sector_map"
,"oecd_crs_sector_code_3_digit_to_itep_sector_web_id_map"
)
short.names = substr(gsub("oecd_crs_|_code_|5_digit|3_digit","",wants),1,30)
wb = createWorkbook()
tables = list()
for(i in 1:length(wants)){
want = wants[i]
table.name = short.names[i]
table = ddw(want)
addWorksheet(wb,table.name)
writeData(wb,table.name,table)
}
saveWorkbook(wb,"dims.xlsx",overwrite=T)
dbDisconnect(con)
?colorBin
library(rleaflet)
library(leaflet)
library(ggplot2)
?colorBin
colorBin("YlOrRd")
colorBin("YlOrRd",domain=c(1,2,3,4,5))
pal = colorBin("YlOrRd",domain=c(1,2,3,4,5))
pal(1)
pal(2)
pal(3)
pal(10)
pal(c(1,2,3,4,5))
