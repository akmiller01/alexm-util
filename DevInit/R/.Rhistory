if("entity-name" %in% names){
wdata <- reshape(data[c("id","entity-name","year","value")],idvar=c("id","entity-name"),timevar="year",direction="wide")
}else{
wdata <- reshape(data[c("id","year","value")],idvar=c("id"),timevar="year",direction="wide")
}
wnames <- names(wdata)
for(j in 1:length(wnames)){
wname = wnames[j]
if(substr(wname,1,5)=="value"){
names(wdata)[names(wdata) == wname] <- substr(wname,7,nchar(wname))
}
}
notesList<-c(
notesList
,"On the 'Data-wide-value' sheet, we have provided the indicator in a wide format. The values you see listed there are from the 'value' column."
,""
)
addWorksheet(wb,"Data-wide-value")
writeData(wb,sheet="Data-wide-value",wdata,colNames=TRUE,rowNames=FALSE)
write.csv(wdata,paste(cwd,"/",basename,"-wide-value",".csv",sep=""),row.names=FALSE,na="")
}
#Wide for original-value
if("id" %in% names & "year" %in% names & "original-value" %in% names & concept$type=="simple")  {
if("entity-name" %in% names){
wdata <- reshape(data[c("id","entity-name","year","original-value")],idvar=c("id","entity-name"),timevar="year",direction="wide")
}else{
wdata <- reshape(data[c("id","year","original-value")],idvar=c("id"),timevar="year",direction="wide")
}
wnames <- names(wdata)
for(j in 1:length(wnames)){
wname = wnames[j]
if(substr(wname,1,14)=="original-value"){
names(wdata)[names(wdata) == wname] <- substr(wname,16,nchar(wname))
}
}
notesList<-c(
notesList
,"On the 'Data-wide-original-value' sheet, we have provided the indicator in a wide format. The values you see listed there are from the 'original-value' column."
,""
)
addWorksheet(wb,"Data-wide-original-value")
writeData(wb,sheet="Data-wide-original-value",wdata,colNames=TRUE,rowNames=FALSE)
write.csv(wdata,paste(cwd,"/",basename,"-wide-original-value",".csv",sep=""),row.names=FALSE,na="")
}
#Reference
#Copy entity.csv
file.copy(paste(refPath,"entity.csv",sep=""),paste(cwd,"entity.csv",sep="/"))
if(basename %in% names(refMap)){
refNames = strsplit(refMap[[basename]],",")[[1]]
notesList<-c(
notesList
,"The following tabs have been included for reference purposes:"
,paste(refNames,collapse=", ")
,""
)
for(j in 1:length(refNames)){
refBaseName = refNames[j]
refName = paste(refPath,refBaseName,".csv",sep="")
#Copy the reference files
file.copy(refName,paste(cwd,"/",refBaseName,".csv",sep=""))
refData <- read.csv(refName,as.is=TRUE,na.strings="")
addWorksheet(wb,refBaseName)
writeData(wb,sheet=refBaseName,refData,colNames=TRUE,rowNames=FALSE)
}
}
#Cap off notes sheet
notesList<-c(
notesList
,""
,""
,"The following is data downloaded from Development Initiative's Datahub: http://devinit.org/data"
,"It is licensed under a Creative Commons Attribution 4.0 International license."
,"More information on licensing is available here: https://creativecommons.org/licenses/by/4.0/"
,"For concerns, questions, or corrections: please email info@devinit.org"
,"Copyright Development Initiatives Poverty Research Ltd. 2015"
)
notesDf <- data.frame(notesList)
writeData(wb,sheet="Notes",notesDf,colNames=FALSE,rowNames=FALSE)
write.table(notesDf,paste0(cwd,"/",basename,"-notes",".csv"),col.names=FALSE,row.names=FALSE,na="",sep=",")
saveWorkbook(wb, paste0(basename,".xlsx"), overwrite = TRUE)
#Go back to user-data folder
setwd(wd)
}
#Zip em up
filenames <- list.files(wd, pattern="/*", full.names=FALSE)
for(i in 1:length(filenames)){
files <- dir(filenames[i],full.names=TRUE)
zip(zipfile = filenames[i],files=files)
}
library(openxlsx)
?read.xlsx
setwd("S:/Central Services/IT/Secure Files")
data <- read.xlsx("pwprotecteddetails.xlsx")
xlsxFile <- system.file("pwprotecteddetails.xlsx", package = "openxlsx")
df1 <- read.xlsx(xlsxFile = xlsxFile, sheet = 1, skipEmptyRows = FALSE)
ls()
xlsxFile <- system.file("pwprotecteddetails.xlsx", package = "openxlsx")
library(openxlsx)
setwd("C:/Users/alexm/Documents/Rwork")
library(openxlsx)
setwd("C:/Users/alexm/Documents/Rwork")
xlsxFile <- system.file("pwprotecteddetails.xlsx", package = "openxlsx")
df1 <- read.xlsx(xlsxFile = xlsxFile, sheet = 1, skipEmptyRows = FALSE)
df1 <- read.xlsx("pwprotecteddetails.xlsx", sheet = 1, skipEmptyRows = FALSE)
install_github("bmschmidt/wordVectors")
library(devtools)
library(devtools)
install_github("bmschmidt/wordVectors")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("bmschmidt/wordVectors")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv", full.names=TRUE)
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
?subStr
?substr
substr("adult-literacy.csv",1,20)
substr("adult-literacy.csv",1,10)
substr("adult-literacy.csv",1,14)
nChar("adult-literacy.csv")
nchar("adult-literacy.csv")
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
trunc("adult-literacy.csv")
?sapply
countryYear <- sapply(countryYear,trunc)
countryYear
countryYear[1]
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- lapply(countryYear,trunc)
countryYear[1]
countryYear[[1]]
countryYear[[2]]
countryYear[[3]]
typeof(countryYear)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
typeof(countryYear)
countryYear[1]
nchar(countryYear[1])
typeof(countryYear[1])
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
length(refs)
length(countryYear)
allFiles <- c(countryYear,refs)
allFiles <- data.frame(allFiles)
View(allFiles)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
name <- c(countryYear,refs)
allFiles <- data.frame(name)
code <- "C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js"
View(allFiles)
names <- unique(allFiles$name)
View(allFiles)
i <- 1
fileName <- allFiles[i,1]
fileName
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
name <- c(countryYear,refs)
allFiles <- data.frame(name,stringsAsFactors=FALSE)
code <- "C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js"
fileName <- allFiles[i,1]
?read.lines
?readlines
??read
?readLines
code <- file("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
code <- readLines(file("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js"))
code
code[16629]
code[16630]
logical(1)
used <- logical(nrow(allFiles))
?grepl
?grepl
grepl("//",code)
grepl("banana",code)
banana <- grepl("banana",code)
max(banana)
min(banana)
banana <- grepl("//",code)
max(banana)
bools <- logical(1)
bools[1] <- 0
bools
min(banana)
?write.csv
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
name <- c(countryYear,refs)
allFiles <- data.frame(name,stringsAsFactors=FALSE)
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
used <- logical(nrow(allFiles))
for(i in 1:nrow(allFiles)){
fileName <- allFiles[i,1]
inCode <- max(grepl(fileName,code))
used[i] <- inCode
}
allFiles$used <- used
write.csv(allFiles,"in_code_check.csv",na="",row.names=FALSE)
View(allFiles)
concepts <- read.csv("C:/git/digital-platform/comcepts.csv",na.strings="",as.is=TRUE)
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
View(concepts)
names(concepts)
concepts <- transform(
concepts
,hasMapTheme <- !is.na(map.theme)
)
View(concepts)
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
concepts <- transform(
concepts
,hasMapTheme = !is.na(map.theme)
)
keep <- c("id","hasMapTheme")
concepts <- concepts[keep]
View(concepts)
View(concepts)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
concepts <- transform(
concepts
,hasMapTheme = !is.na(map.theme)
)
keep <- c("id","hasMapTheme")
concepts <- concepts[keep]
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
id <- c(countryYear,refs)
allFiles <- data.frame(id,stringsAsFactors=FALSE)
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
used <- logical(nrow(allFiles))
for(i in 1:nrow(allFiles)){
fileName <- allFiles[i,1]
inCode <- max(grepl(fileName,code))
used[i] <- inCode
}
allFiles$used <- used
View(allFiles)
final <- merge(
allFiles
,concepts
,by="id"
all=TRUE
)
final <- merge(
allFiles
,concepts
,by="id"
,all=TRUE
)
View(final)
0==FALSE
names(final)
final <- transform(
final
,in_ddh=used & hasMapTheme
)
View(final)
final <- transform(
final
,in_ddh=used | hasMapTheme
)
View(allFiles)
View(final)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
concepts <- transform(
concepts
,hasMapTheme = !is.na(map.theme)
)
keep <- c("id","hasMapTheme")
concepts <- concepts[keep]
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
id <- c(countryYear,refs)
allFiles <- data.frame(id,stringsAsFactors=FALSE)
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
used <- logical(nrow(allFiles))
for(i in 1:nrow(allFiles)){
fileName <- allFiles[i,1]
inCode <- max(grepl(fileName,code))
used[i] <- inCode
}
allFiles$used <- used
final <- merge(
allFiles
,concepts
,by="id"
,all=TRUE
)
names(final)
View(allFiles)
final <- merge(
allFiles
,concepts
,by="id"
,all=TRUE
)
View(final)
final[which(is.na(final$used)),]$used <- 0
final[which(is.na(final$hasMapTheme)),]$hasMapTheme <- FALSE
View(final)
final <- transform(
final
,in_ddh=used | hasMapTheme
)
?grepl
final <- subset(final,!grepl("oda-donor",id))
View(final)
final <- final[keep]
View(final)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
concepts <- transform(
concepts
,hasMapTheme = !is.na(map.theme)
)
keep <- c("id","hasMapTheme")
concepts <- concepts[keep]
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
id <- c(countryYear,refs)
allFiles <- data.frame(id,stringsAsFactors=FALSE)
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
used <- logical(nrow(allFiles))
for(i in 1:nrow(allFiles)){
fileName <- allFiles[i,1]
inCode <- max(grepl(fileName,code))
used[i] <- inCode
}
allFiles$used <- used
final <- merge(
allFiles
,concepts
,by="id"
,all=TRUE
)
final[which(is.na(final$used)),]$used <- 0
final[which(is.na(final$hasMapTheme)),]$hasMapTheme <- FALSE
final <- transform(
final
,in_ddh=used | hasMapTheme
)
final[which(grepl("oda-donor",final$id)),]$in_ddh <- TRUE
View(final)
wd <- "C:/git/alexm-util/DevInit/R"
setwd(wd)
trunc <- function(str){
newStr <- substr(str,1,nchar(str)-4)
return (newStr)
}
concepts <- read.csv("C:/git/digital-platform/concepts.csv",na.strings="",as.is=TRUE)
concepts <- transform(
concepts
,hasMapTheme = !is.na(map.theme)
)
keep <- c("id","hasMapTheme")
concepts <- concepts[keep]
countryYear <- list.files("C:/git/digital-platform/country-year", pattern="*.csv")
countryYear <- sapply(countryYear,trunc)
refs <- list.files("C:/git/digital-platform/reference", pattern="*.csv")
refs <- sapply(refs,trunc)
id <- c(countryYear,refs)
allFiles <- data.frame(id,stringsAsFactors=FALSE)
code <- readLines("C:/git/di-website/wp/wp-content/themes/diConcept/dist/app.js")
used <- logical(nrow(allFiles))
for(i in 1:nrow(allFiles)){
fileName <- allFiles[i,1]
inCode <- max(grepl(fileName,code))
used[i] <- inCode
}
allFiles$used <- used
final <- merge(
allFiles
,concepts
,by="id"
,all=TRUE
)
final[which(is.na(final$used)),]$used <- 0
final[which(is.na(final$hasMapTheme)),]$hasMapTheme <- FALSE
final <- transform(
final
,in_ddh=used | hasMapTheme
)
keep <- c("id","in_ddh")
final <- final[keep]
final[which(grepl("oda-donor",final$id)),]$in_ddh <- TRUE
write.csv(final,"in_code_check.csv",na="",row.names=FALSE)
library(jsonlite)
raw <- fromJSON("http://www.d-portal.org/ctrack/q?from=act%2Ctrans%2Ccountry&limit=-1&select=country_code%2Csum_of_percent_of_trans_usd&groupby=country_code&trans_code=D%7CE&trans_day_gteq=2017-01-01&trans_day_lt=2018-01-01&reporting_ref=DE-1&view=countries&_=1508420374887")
data <- raw$rows
total_count = fromJSON("http://datastore.iatistandard.org/api/1/access/activity?limit=0")
View(total_count)
total_count["total-count"]
total_count["total-count"][[1]]
total_count = fromJSON("http://datastore.iatistandard.org/api/1/access/activity?limit=0")["total-count"][[1]]
offset = 0
fread(paste0(base_url,offset))
list.of.packages <- c("data.table","jsonlite")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
fread(paste0(base_url,offset))
base_url = "http://datastore.iatistandard.org/api/1/access/activity.csv?offset="
fread(paste0(base_url,offset))
paste0(base_url,offset)
step = 10000
data_list = list()
data_index = 1
paste0(base_url,step*data_index)
offset = 0
step = 10000
data_list = list()
data_index = 1
paste0(base_url,offset)
offset = offset + step
data_index = data_index + 1
paste0(base_url,offset)
format(10000)
format(10000000000000)
?format
format(10000000000000,scientific=F)
total_count = fromJSON("http://datastore.iatistandard.org/api/1/access/activity?limit=0")["total-count"][[1]]
1100000/10000
list.of.packages <- c("data.table","jsonlite")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
total_count = fromJSON("http://datastore.iatistandard.org/api/1/access/activity?limit=0")["total-count"][[1]]
base_url = "http://datastore.iatistandard.org/api/1/access/activity.csv?limit="
offset = 0
step = 10000
data_list = list()
data_index = 1
pb = txtProgressBar(max=total_count)
list.of.packages <- c("data.table","jsonlite")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
total_count = fromJSON("http://datastore.iatistandard.org/api/1/access/activity?limit=0")["total-count"][[1]]
base_url = "http://datastore.iatistandard.org/api/1/access/activity.csv?limit="
offset = 0
step = 10000
data_list = list()
data_index = 1
pb = txtProgressBar(max=total_count)
paste0(base_url,format(step,scientific=F),"offset=",format(offset,scientific = F))
