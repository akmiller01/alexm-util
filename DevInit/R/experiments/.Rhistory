#To
page <- html(paste0(toUrl,year))
toCERFtmp <- page %>%
html_node("table") %>%
html_table(fill=TRUE)
if("Donors" %in% names(toCERFtmp)){
toCERFtmp <- toCERFtmp[,c(2,3)]
toCERFtmp$obsTime <- year
toCERFtmp$RECIPIENT <- "Central Emergency Response Fund"
names(toCERFtmp) <- c("DONOR","obsValue","obsTime","RECIPIENT")
toCERFtmp$obsValue <- as.numeric(gsub(",","", toCERFtmp$obsValue))
toCERFtmp <- subset(toCERFtmp,!is.na(DONOR))
if(exists("toCERF")){toCERF <- rbind(toCERF,toCERFtmp)}else{toCERF <- toCERFtmp}
}
}
cDONOR <- c()
cRECIPIENT <- c()
cobsTime <- c()
cobsValue <- c()
years <- unique(toCERF$obsTime)
donors <- unique(toCERF$DONOR)
for(i in 1:length(years)){
year <- years[i]
totalCERF <- sum(subset(toCERF, (obsTime==year))$obsValue,na.rm=TRUE)
for(k in 1:length(donors)){
donor <- donors[k]
tocerf <- subset(toCERF, (DONOR==donor & obsTime==year))$obsValue
if(length(tocerf)<1){tocerf<-0}
toCERFpercent <- tocerf / totalCERF
fromCERFset <- subset(fromCERF, (obsTime==year))
recipients <- unique(fromCERFset$RECIPIENT)
if(length(recipients)>0){
for(m in 1:length(recipients)){
recipient <- recipients[m]
fromCERFnum <- subset(fromCERFset, RECIPIENT==recipient)$obsValue
CERFimputed <- toCERFpercent * fromCERFnum
cDONOR <- c(cDONOR,donor)
cRECIPIENT <- c(cRECIPIENT,recipient)
cobsTime <- c(cobsTime, year)
cobsValue <- c(cobsValue, CERFimputed)
}
}
}
}
cerffunding <- data.frame(cDONOR,cRECIPIENT,cobsTime,cobsValue)
names(cerffunding) <- c("DONOR","RECIPIENT","obsTime","obsValue")
View(cerffunding)
tocerf
totalCERF
startYear <- "2004"
endYear <- "2013"
includeEUinRecipientTotals <- TRUE
CRSUrl <- paste0("http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+918+301+4+5+6+701+12+302+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100.111+112+113+114+121+122+130+140+151+152+160+210+220+230+240+250+311+312+313+321+322+323+331+332+410+430+510+520+530+600+720+730+740+910+930+998.100.100.D.112.100/all?startTime=",startYear,"&endTime=",endYear)
t1 <- OECD(CRSUrl)
#OECD Func####
OECD <- function(url,concept=FALSE){
#Separate out data URL components
dRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/"
indicator <- strsplit(substr(url,nchar(dRoot)+1,nchar(url)),"/")[[1]][1]
filter <- substr(url,nchar(dRoot)+1+nchar(indicator),nchar(url))
#Structure URL
sRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetDataStructure/"
t1sUrl <- paste(sRoot
,indicator
,sep = "")
#Fetch data
t1dsdmx <- readSDMX(url)
t1ssdmx <- readSDMX(t1sUrl)
#Convert to DF
t1 <- as.data.frame(t1dsdmx)
#get codelists
cls <- t1ssdmx@codelists
codelists <- sapply(cls@codelists, function(x) x@id)
#Recode
for(i in 1:length(codelists)){
suffix <- paste("CL_",indicator,"_",sep="")
clName <- substr(codelists[i],nchar(suffix)+1,nchar(codelists[i]))
codelist <- cls@codelists[i][[1]]@Code
for(j in 1:length(codelist)){
id <- codelist[j][[1]]@id
name <- codelist[j][[1]]@label$en
if(clName %in% colnames(t1)){
t1[clName][which(t1[clName]==id),] <- name
}
}
}
#get concepts
concepts <- as.data.frame(t1ssdmx@concepts)
if(concept){
return(concepts)
}else{
return(t1)
}
}
t1 <- OECD(CRSUrl)
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
library(googlesheets)
#Configuration
t1 <- OECD(CRSUrl)
View(`t1`)
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100.1000.100.100.D.112.100/all?startTime=2004&endTime=2013"
t1 <- OECD(url)
findMeta <- function(sectorVar){
sectors <- c(
"This Space Intentionally Left Blank"
,"IX. Administrative Costs of Donors, Total"
,"I.1.a. Education, Level Unspecified, Total"
,"I.1.b. Basic Education, Total"
,"I.1.c. Secondary Education, Total"
,"I.1.d. Post-Secondary Education, Total"
,"I.2.a. Health, General, Total"
,"I.2.b. Basic Health, Total"
,"I.3. Population Pol./Progr. & Reproductive Health, Total"
,"I.4. Water Supply & Sanitation, Total"
,"I.5.a. Government & Civil Society-general, Total"
,"I.5.b. Conflict, Peace & Security, Total"
,"I.6. Other Social Infrastructure & Services, Total"
,"II.1. Transport & Storage, Total"
,"II.2. Communications, Total"
,"II.3. Energy, Total"
,"II.4. Banking & Financial Services, Total"
,"II.5. Business & Other Services, Total"
,"III.1.a. Agriculture, Total"
,"III.1.b. Forestry, Total"
,"III.1.c. Fishing, Total"
,"III.2.a. Industry, Total"
,"III.2.b. Mineral Resources & Mining, Total"
,"III.2.c. Construction, Total"
,"III.3.a. Trade Policies & Regulations, Total"
,"III.3.b. Tourism, Total"
,"IV.1. General Environment Protection, Total"
,"IV.2. Other Multisector, Total"
,"XII. Unallocated / Unspecified, Total"
,"XI. Refugees in Donor Countries, Total"
,"VI.1. General Budget Support, Total"
,"VI.2. Dev. Food Aid/Food Security Ass., Total"
,"VI.3. Other Commodity Ass., Total"
,"VII. Action Relating to Debt, Total"
,"VIII.1. Emergency Response, Total"
,"VIII.2. Reconstruction Relief & Rehabilitation, Total"
,"VIII.3. Disaster Prevention & Preparedness, Total"
)
publicServiceProvision <- c(
sectors[3]
,sectors[4]
,sectors[5]
,sectors[6]
,sectors[7]
,sectors[8]
,sectors[9]
,sectors[10]
)
governancePeaceSecurity <- c(
sectors[11]
,sectors[12]
)
otherCountryProgrammableAid <- c(
sectors[13]
,sectors[14]
,sectors[15]
,sectors[16]
,sectors[17]
,sectors[18]
,sectors[19]
,sectors[20]
,sectors[21]
,sectors[22]
,sectors[23]
,sectors[24]
,sectors[25]
,sectors[26]
,sectors[27]
,sectors[28]
)
humanitarianAid <- c(
sectors[35]
,sectors[36]
,sectors[37]
)
otherNonCountryProgrammableAid <- c(
sectors[2]
,sectors[29]
,sectors[30]
,sectors[31]
,sectors[32]
,sectors[33]
)
newSectors <- c()
for(i in 1:length(sectorVar)){
sector <- sectorVar[i]
if(sector %in% publicServiceProvision){
newSector <- "Public service provision"
}
else if(sector %in% governancePeaceSecurity){
newSector <- "Governance, peace and security"
}
else if(sector %in% otherCountryProgrammableAid){
newSector <- "Other country programmable aid"
}
else if(sector %in% humanitarianAid){
newSector <- "Humanitarian aid"
}
else if(sector %in% otherNonCountryProgrammableAid){
newSector <- "Other non-country programmable aid"
}
else{newSector <- "ERR"}
newSectors <- c(newSectors,newSector)
}
return(newSectors)
}
#Add metaSector and remove Action Relating to Debt####
t1 <- transform(t1, metaSector = findMeta(SECTOR))
getwd()
write.csv(t1,"crs_sectors.csv",na="",row.names=FALSE)
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
''
~
##
#aw
dawd
#awd
#install.packages("rsdmx")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("httpuv")
#install.packages("googlesheets")
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
library(googlesheets)
#Configuration
startYear <- "2004"
endYear <- "2013"
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
)
)))
]]
##
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
url <- paste0("http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013")
\
)
@
''
#
url <- 'http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013'
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20001+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013";
;
;
;
;
url = "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20005+20001+801+1+2+301+68+3+18+4+5+40+20+21+6+701+742+22+7+820+8+76+9+69+61+50+10+11+12+302+20002+1012+913+914+921+915+916+953+1011+1013+990+918+1311+811+1313+1312+901+905+909+912+988+903+958+976+104+951+978+971+959+948+974+967+963+923+964+966+928+20006+82+552+576+21600+1601+20003+301+4+5+6+701+12+302+20011+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+20004+1+2+68+3+18+4+5+40+21+6+22+7+76+9+69+61+50+10+12+918.235+238+273+278+349+625+665+543+573+550.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
#install.packages("rsdmx")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("httpuv")
#install.packages("googlesheets")
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
library(googlesheets)
#Configuration
startYear <- "2004"
endYear <- "2013"
t1 <- OECD(url)
#OECD Func####
OECD <- function(url,concept=FALSE){
#Separate out data URL components
dRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/"
indicator <- strsplit(substr(url,nchar(dRoot)+1,nchar(url)),"/")[[1]][1]
filter <- substr(url,nchar(dRoot)+1+nchar(indicator),nchar(url))
#Structure URL
sRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetDataStructure/"
t1sUrl <- paste(sRoot
,indicator
,sep = "")
#Fetch data
t1dsdmx <- readSDMX(url)
t1ssdmx <- readSDMX(t1sUrl)
#Convert to DF
t1 <- as.data.frame(t1dsdmx)
#get codelists
cls <- t1ssdmx@codelists
codelists <- sapply(cls@codelists, function(x) x@id)
#Recode
for(i in 1:length(codelists)){
suffix <- paste("CL_",indicator,"_",sep="")
clName <- substr(codelists[i],nchar(suffix)+1,nchar(codelists[i]))
codelist <- cls@codelists[i][[1]]@Code
for(j in 1:length(codelist)){
id <- codelist[j][[1]]@id
name <- codelist[j][[1]]@label$en
if(clName %in% colnames(t1)){
t1[clName][which(t1[clName]==id),] <- name
}
}
}
#get concepts
concepts <- as.data.frame(t1ssdmx@concepts)
if(concept){
return(concepts)
}else{
return(t1)
}
}
t1 <- OECD(url)
t1 <- OECD(url)
t1 <- OECD(url)
url <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20001+918.235+238+273+278+349+625+665+543+573+550.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013"
#install.packages("rsdmx")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("httpuv")
#install.packages("googlesheets")
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
library(googlesheets)
#Configuration
startYear <- "2004"
endYear <- "2013"
includeEUinRecipientTotals <- TRUE
#OECD Func####
OECD <- function(url,concept=FALSE){
#Separate out data URL components
dRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/"
indicator <- strsplit(substr(url,nchar(dRoot)+1,nchar(url)),"/")[[1]][1]
filter <- substr(url,nchar(dRoot)+1+nchar(indicator),nchar(url))
#Structure URL
sRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetDataStructure/"
t1sUrl <- paste(sRoot
,indicator
,sep = "")
#Fetch data
t1dsdmx <- readSDMX(url)
t1ssdmx <- readSDMX(t1sUrl)
#Convert to DF
t1 <- as.data.frame(t1dsdmx)
#get codelists
cls <- t1ssdmx@codelists
codelists <- sapply(cls@codelists, function(x) x@id)
#Recode
for(i in 1:length(codelists)){
suffix <- paste("CL_",indicator,"_",sep="")
clName <- substr(codelists[i],nchar(suffix)+1,nchar(codelists[i]))
codelist <- cls@codelists[i][[1]]@Code
for(j in 1:length(codelist)){
id <- codelist[j][[1]]@id
name <- codelist[j][[1]]@label$en
if(clName %in% colnames(t1)){
t1[clName][which(t1[clName]==id),] <- name
}
}
}
#get concepts
concepts <- as.data.frame(t1ssdmx@concepts)
if(concept){
return(concepts)
}else{
return(t1)
}
}
t1 <- OECD(url)
readSDMX(url)
url <- "http://stats.oecd.org/SDMX-JSON//data/CRS1/20001+918.235+238+273+278+349+625+665+543+573+550.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=2004&endTime=2013&dimensionAtObservation=allDimensions"
t1 <- OECD(url)
boolean(!)
boolean(1)
typeof(TRUE)
logical(1)
logical(2)
logical(3)
?grepl
TRUE | FALSE
TRUE || FALSE
FALSE || FALSE
FALSE | TRUE
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
View(vps)
dummies = model.matrix(~vps$provider)
View(dummies)
View(dummies)
for(1 in 1:length(names(dummies))){
vps[,names(dummies)[i]] <- dummies[,names(dummies)[i]]
}
for(i in 1:length(names(dummies))){
vps[,names(dummies)[i]] <- dummies[,names(dummies)[i]]
}
View(vps)
names(dummies)
colnames(dummies)
View(dummies)
for(i in 2:length(colnames(dummies))){
vps[,colnames(dummies)[i]] <- dummies[,colnames(dummies)[i]]
}
View(vps)
?lm
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
dummies = model.matrix(~vps$provider)
for(i in 2:length(colnames(dummies))){
vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
}
fit <- lm(price ~ provider1+mem+core+storage, data=vps)
summary(fit)
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
dummies = model.matrix(~vps$provider)
for(i in 2:length(colnames(dummies))){
vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
}
View(vps)
fit <- lm(price ~ provider2+provider3+provider4+mem+core+storage, data=vps)
summary(fit)
providers <- unique(vps$providers)
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
providers <- unique(vps$providers)
for(i in 1:length(providers)){
data <- subset(vps,provider=providers[i])
fit <- lm(price ~ mem+core+storage, data=data)
print(providers[i])
summary(fit)
}
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
providers <- unique(vps$provider)
for(i in 1:length(providers)){
data <- subset(vps,provider=providers[i])
fit <- lm(price ~ mem+core+storage, data=data)
print(providers[i])
summary(fit)
}
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
providers <- unique(vps$provider)
for(i in 1:length(providers)){
data <- subset(vps,provider=providers[i])
fit <- lm(price ~ mem+core+storage, data=data)
print(providers[i])
print(summary(fit))
}
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv")
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
results <- list()
providers <- unique(vps$provider)
for(i in 1:length(providers)){
data <- subset(vps,provider=providers[i])
fit <- lm(price ~ mem+core+storage, data=data)
results <- c(results,list(providers[i]=summary(fit)))
}
data <- subset(vps,provider=providers[[i]])
View(data)
providers[[1]]
providers[1][[1]]
providers <- unique(vps$provider)
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv",as.is=TRUE)
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
providers <- unique(vps$provider)
for(i in 1:length(providers)){
data <- subset(vps,provider=providers[[i]])
fit <- lm(price ~ mem+core+storage, data=data)
print(providers[i])
print(summary(fit))
}
setwd("C:/git/alexm-util/DevInit/R/experiments")
vps <- read.csv("vps.csv",as.is=TRUE)
# dummies = model.matrix(~vps$provider)
#
# for(i in 2:length(colnames(dummies))){
#   vps[,paste0("provider",i)] <- dummies[,colnames(dummies)[i]]
# }
providers <- unique(vps$provider)
for(i in 1:length(providers)){
data <- subset(vps,provider==providers[[i]])
fit <- lm(price ~ mem+core+storage, data=data)
print(providers[i])
print(summary(fit))
}
