sectors[2]
,sectors[29]
,sectors[30]
,sectors[31]
,sectors[32]
,sectors[33]
)
newSectors <- c()
for(i in 1:length(sectorVar)){
sector <- sectorVar[i]
if(sector %in% publicServiceProvision){
newSector <- "Public service provision"
}
else if(sector %in% governancePeaceSecurity){
newSector <- "Governance, peace and security"
}
else if(sector %in% otherCountryProgrammableAid){
newSector <- "Other country programmable aid"
}
else if(sector %in% humanitarianAid){
newSector <- "Humanitarian aid"
}
else if(sector %in% otherNonCountryProgrammableAid){
newSector <- "Other non-country programmable aid"
}
else{newSector <- "ERR"}
newSectors <- c(newSectors,newSector)
}
return(newSectors)
}
####OECD DAC DONORS####
CRSUrl <- paste0("http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20001+918.10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+732+740+735+738+742+745+748+751+753+755+761+764+765+769+789+10009+625+610+611+666+630+612+645+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+10016+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+10017+248+279+265+740+614+615+10018+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+10019+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+10025+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+732+735+742+748+761+530+546+552+558+561+566+576+840+850+858+10024+88+89+189+289+298+380+389+489+498+789+619+679+689+589+798+889+9998+10030+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+10201+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+10202+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+10203+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+10013+71+10014+86+93+85+610+611+612+613+614+615+616+617+10023+71+86+93+85+610+611+612+613+614+615+616+617+10040+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+10041+287+230+232+240+244+255+256+260+269.1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=",startYear,"&endTime=",endYear)
#Download data####
t1r <-OECD(CRSUrl)
)
""
""
#install.packages("rsdmx")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("httpuv")
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
#OECD Codelist Func####
OECDCode <- function(indicator){
#Structure URL
sRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetDataStructure/"
t1sUrl <- paste0(sRoot
,indicator
)
#Fetch data
t1ssdmx <- readSDMX(t1sUrl)
#get codelists
cls <- t1ssdmx@codelists
codelists <- sapply(cls@codelists, function(x) x@id)
#Flatten
variable <- c()
id <- c()
name <- c()
for(i in 1:length(codelists)){
suffix <- paste("CL_",indicator,"_",sep="")
clName <- substr(codelists[i],nchar(suffix)+1,nchar(codelists[i]))
codelist <- cls@codelists[i][[1]]@Code
for(j in 1:length(codelist)){
ID <- codelist[j][[1]]@id
NAME <- codelist[j][[1]]@label$en
id <- c(id,ID)
name <- c(name,NAME)
variable <- c(variable,clName)
}
df <- data.frame(variable,id,name)
}
#return
return(df)
}
#E.g.####
codes <- OECDCode("TABLE2A")
recips <- subset(codes,variable=="RECIPIENT")
recipNames <- c(
'Afghanistan',
'Algeria',
'Bangladesh',
'Burkina Faso',
'Burundi',
'Central African Republic',
'Chad',
'Colombia',
"CÃ´te d'Ivoire",
"Democratic People's Republic of Korea",
'Democratic Republic of the Congo',
'Ethiopia',
'Guinea',
'Haiti',
'Indonesia',
'Iraq',
'Jordan',
'Kenya',
'Lebanon',
'Liberia',
'Mali',
'Myanmar',
'Nepal',
'Niger',
'Nigeria',
'Pakistan',
'Philippines',
'Sierra Leone',
'Somalia',
'South Sudan',
'Sri Lanka',
'Sudan',
'Syrian Arab Republic',
'Uganda',
'Ukraine',
'West Bank and Gaza Strip',
'Yemen',
'Zimbabwe'
)
mergeSet <- data.frame(recipNames,rep(1))
recips <- merge(
recips,
mergeSet,
by.x=c("name"),
by.y=c("recipNames")
)
recipStr <- paste(recips$id,collapse="+")
codes <- OECDCode("CRS1")
View(codes)
codes <- OECDCode("CRS1")
recips <- subset(codes,variable=="RECIPIENT")
recipNames <- c(
'Afghanistan',
'Algeria',
'Bangladesh',
'Burkina Faso',
'Burundi',
'Central African Republic',
'Chad',
'Colombia',
"CÃ´te d'Ivoire",
"Democratic People's Republic of Korea",
'Democratic Republic of the Congo',
'Ethiopia',
'Guinea',
'Haiti',
'Indonesia',
'Iraq',
'Jordan',
'Kenya',
'Lebanon',
'Liberia',
'Mali',
'Myanmar',
'Nepal',
'Niger',
'Nigeria',
'Pakistan',
'Philippines',
'Sierra Leone',
'Somalia',
'South Sudan',
'Sri Lanka',
'Sudan',
'Syrian Arab Republic',
'Uganda',
'Ukraine',
'West Bank and Gaza Strip',
'Yemen',
'Zimbabwe'
)
mergeSet <- data.frame(recipNames,rep(1))
recips <- merge(
recips,
mergeSet,
by.x=c("name"),
by.y=c("recipNames")
)
recipStr <- paste(recips$id,collapse="+")
recipStr
subset(codes,id==63)
subset(codes,id==269)
subset(codes,id==1000)
recips <- "625+130+666+287+228+247+231+232+437+740+235+238+243+349+738+543+549+248+555+251+255+635+660+260+261+665+755+272+273+279+640+278+573+285+85+550+580+265"
recips <- strsplit(recips,"+",fixed=TRUE)[[1]]
recipBySectorTotal <- foreach(i=1:length(recips),.packages=c("plyr","rsdmx")
,.combine=rbind) %do%
{
recip <- recips[i]
message(recip)
CRSUrl <- paste0("http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/CRS1/20001+918.",recip,".1000+450+100+110+111+11110+11120+11130+11182+112+11220+11230+11240+113+11320+11330+114+11420+11430+120+121+12110+12181+12182+12191+122+12220+12230+12240+12250+12261+12262+12263+12281+130+13010+13020+13030+13040+13081+140+14010+14015+14020+14021+14022+14030+14031+14032+14040+14050+14081+150+151+15110+15111+15112+15113+15130+15150+15151+15152+15153+15160+15170+152+15210+15220+15230+15240+15250+15261+160+16010+16020+16030+16040+16050+16061+16062+16063+16064+200+210+21010+21020+21030+21040+21050+21061+21081+220+22010+22020+22030+22040+230+23010+23020+23030+23040+23050+23061+23062+23063+23064+23065+23066+23067+23068+23069+23070+23081+23082+240+24010+24020+24030+24040+24081+250+25010+25020+300+310+311+31110+31120+31130+31140+31150+31161+31162+31163+31164+31165+31166+31181+31182+31191+31192+31193+31194+31195+312+31210+31220+31261+31281+31282+31291+313+31310+31320+31381+31382+31391+320+321+32110+32120+32130+32140+32161+32162+32163+32164+32165+32166+32167+32168+32169+32170+32171+32172+32182+322+32210+32220+32261+32262+32263+32264+32265+32266+32267+32268+323+32310+331+33110+33120+33130+33140+33150+33181+332+33210+400+410+41010+41020+41030+41040+41050+41081+41082+430+43010+43030+43040+43050+43081+43082+500+510+51010+520+52010+530+53030+53040+600+60010+60020+60030+60040+60061+60062+60063+700+720+72010+72040+72050+730+73010+740+74010+910+91010+930+93010+998+99810+99820.100.100.D.112.100/all?startTime=",startYear,"&endTime=",endYear)
#Download data####
t1r <-OECD(CRSUrl)
#Add metaSector and remove Action Relating to Debt####
t1r <- transform(t1r, metaSector = findMeta(SECTOR))
t1r <- t1r[t1r$metaSector!="ERR",]
#Final Transformations####
recipBySector <- ddply(t1r,.(RECIPIENT,metaSector),summarize,total=sum(obsValue,na.rm=TRUE))
recipBySector <- recipBySector[order(recipBySector$RECIPIENT),]
names(recipBySector)[which(names(recipBySector)=="total")] <- timeVarName
if(nrow(recipBySector[which(recipBySector$RECIPIENT=="CÃ´te d'Ivoire"),])>0){
recipBySector[which(recipBySector$RECIPIENT=="CÃ´te d'Ivoire"),]$RECIPIENT <- "Cote d'Ivoire"
}
recipBySector
}
#Let's save static files...
write.csv(recipBySectorTotal,paste0("recipBySector ",timeVarName,".csv"),na="",row.names=FALSE)
View(recipBySectorTotal)
unique(recipBySectorTotal$RECIPIENT)
for(i in 1:length(unique(recipBySectorTotal$RECIPIENT))){print(unique(recipBySectorTotal$RECIPIENT)[i])}
library(rCharts)
library(plyr)
wd <-"C:/Users/alexm/Documents/RWork/GDELT/"
setwd(wd)
colnames <- read.csv("CSV.header.dailyupdates.csv", header = FALSE,
sep="\t",colClasses="character")
for(i in 1:1){
yesterday <- format(Sys.Date()-i, "%Y%m%d")
yestwd <- paste(wd,yesterday,sep="/")
message(yesterday)
if(file.exists(yestwd)){
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
}
else{
dir.create(paste(wd,yesterday,sep="/"))
setwd(yestwd)
filename <- paste(yesterday,".export.CSV",sep="")
zipname <- paste("http://data.gdeltproject.org/events/",
filename,".zip",sep="")
zip <- tempfile()
download.file(zipname,zip)
unzip(zip, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
}
data <- read.csv(filename, header = FALSE,
sep="\t",colClasses="character",
col.names = colnames)
bdi <- subset(data,(Actor1CountryCode=="BDI" | Actor2CountryCode=="BDI"))
if(exists("reports")){
reports <- rbind(bdi,reports)
}
else{
reports <- bdi
}
}
df <- ddply(reports,.(SQLDATE,EventRootCode)
,function(x){
return(nrow(x))
})
names(df)[names(df)=="V1"] <- "value"
View(reports)
#install.packages("jsonlite")
#install.packages("curl")
#install.packages("plyr")
library(jsonlite)
library(plyr)
wd <- "C:/Users/alexm/Documents/"
setwd(wd)
#years = c(2005:2015)
years = c(2015)
root <- "http://fts.unocha.org/api/v1/"
emergencies <- fromJSON(paste(root,"Emergency/year/",years[1],".json",sep=""))
if(length(years)>1){
for(i in 2:length(years)){
year <- years[i]
emergencies <- rbind(emergencies, fromJSON(paste(root,"Emergency/year/",year,".json",sep="")))
print(paste("Pulling emergencies for year ==",year))
}
}
View(emergencies)
View(emergencies)
#}
contrib_emerg <- fromJSON(paste(root,"Contribution/emergency/",emergencies$id[1],".json",sep=""))
for(i in 2:nrow(emergencies)){
contrib_emerg <- rbind(contrib_emerg, fromJSON(paste(root,"Contribution/emergency/",emergencies$id[i],".json",sep="")))
print(paste("Pulling contributions for emergency ==",emergencies$id[i]))
}
View(contrib_emerg)
names(contrib_emerg)
library(plyr)
pivot <- ddply(contrib_emerg,.(donor,recipient,status),summarize,total=sum(amount))
View(pivot)
names(pivot)
unique(pivot$recipients)
unique(pivot$recipient)
names(pivot)
subset(pivot,recipient=="Caritas France")
View(contrib_emerg)
projects <- fromJSON(paste(root,"Project/appeal/",appeals$id[1],".json",sep=""))
for(i in 2:nrow(appeals)){
projects <- rbind(projects, fromJSON(paste(root,"Project/appeal/",appeals$id[i],".json",sep="")))
print(paste("Pulling projects for appeal ==",appeals$id[i]))
}
appeals <- fromJSON(paste(root,"Appeal/year/",years[1],".json",sep=""))
if(length(years)>1){
for(i in 2:length(years)){
year <- years[i]
appeals <- rbind(appeals, fromJSON(paste(root,"Appeal/year/",year,".json",sep="")))
print(paste("Pulling appeals for year ==",year))
}
}
projects <- fromJSON(paste(root,"Project/appeal/",appeals$id[1],".json",sep=""))
for(i in 2:nrow(appeals)){
projects <- rbind(projects, fromJSON(paste(root,"Project/appeal/",appeals$id[i],".json",sep="")))
print(paste("Pulling projects for appeal ==",appeals$id[i]))
}
View(projects)
#install.packages("jsonlite")
#install.packages("curl")
#install.packages("plyr")
library(jsonlite)
library(plyr)
wd <- "C:/Users/alexm/Documents/"
setwd(wd)
#years = c(2005:2015)
years = c(2015)
####Meta-data####
root <- "http://fts.unocha.org/api/v1/"
countries <- fromJSON(paste(root,"country.json",sep=""))
sectors <- fromJSON(paste(root,"sector.json",sep=""))
organizations <- fromJSON(paste(root,"organization.json",sep=""))
emergencies <- fromJSON(paste(root,"Emergency/year/",years[1],".json",sep=""))
if(length(years)>1){
for(i in 2:length(years)){
year <- years[i]
emergencies <- rbind(emergencies, fromJSON(paste(root,"Emergency/year/",year,".json",sep="")))
print(paste("Pulling emergencies for year ==",year))
}
}
appeals <- fromJSON(paste(root,"Appeal/year/",years[1],".json",sep=""))
if(length(years)>1){
for(i in 2:length(years)){
year <- years[i]
appeals <- rbind(appeals, fromJSON(paste(root,"Appeal/year/",year,".json",sep="")))
print(paste("Pulling appeals for year ==",year))
}
}
####Projects####
projects <- fromJSON(paste(root,"Project/appeal/",appeals$id[1],".json",sep=""))
for(i in 2:nrow(appeals)){
projects <- rbind(projects, fromJSON(paste(root,"Project/appeal/",appeals$id[i],".json",sep="")))
print(paste("Pulling projects for appeal ==",appeals$id[i]))
}
####Contributions####
#contrib_appeal <- fromJSON(paste(root,"Contribution/appeal/",appeals$id[1],".json",sep=""))
#for(i in 2:nrow(appeals)){
#  contrib_appeal <- rbind(contrib_appeal, fromJSON(paste(root,"Contribution/appeal/",appeals$id[i],".json",sep="")))
#  print(paste("Pulling contributions for appeal ==",appeals$id[i]))
#}
contrib_emerg <- fromJSON(paste(root,"Contribution/emergency/",emergencies$id[1],".json",sep=""))
for(i in 2:nrow(emergencies)){
contrib_emerg <- rbind(contrib_emerg, fromJSON(paste(root,"Contribution/emergency/",emergencies$id[i],".json",sep="")))
print(paste("Pulling contributions for emergency ==",emergencies$id[i]))
}
####Save####
#setwd(paste(wd,"FTS-Complete",sep=""))
#write.csv(countries,"./countries.csv",row.names=FALSE,na="")
#write.csv(sectors,"./sectors.csv",row.names=FALSE,na="")
#write.csv(organizations,"./organizations.csv",row.names=FALSE,na="")
#write.csv(emergencies,"./emergencies.csv",row.names=FALSE,na="")
#write.csv(appeals,"./appeals.csv",row.names=FALSE,na="")
#write.csv(projects,"./projects.csv",row.names=FALSE,na="")
#write.csv(contrib_appeal,"./contrib_appeal.csv",row.names=FALSE,na="")
#write.csv(contrib_emerg,"./contrib_emerg.csv",row.names=FALSE,na="")
####Merge Contributions to Projects####
colnames(appeals) <- paste("appeal",colnames(appeals),sep=".")
colnames(emergencies) <- paste("emergency",colnames(emergencies),sep=".")
colnames(projects) <- paste("project",colnames(projects),sep=".")
colnames(contrib_emerg) <- paste("contrib",colnames(contrib_emerg),sep=".")
projectContrib <- merge(contrib_emerg
,projects
,by.x=c("contrib.project_code")
,by.y=c("project.code")
,all.y=TRUE)
names(projectContrib)[names(projectContrib) == "contrib.project_code"] <- "project.code"
View(appeals)
View(projectContrib)
names(projectContrib)[names(projectContrib) == "contrib.project_code"] <- "project.code"
View(projectContrib)
projectContrib <- ddply(projectContrib,.(project.code),function(x){
pledges = 0
commited = 0
contributed = 0
for(i in 1:nrow(x)){
if(!is.na(x$contrib.status[i])){
if(x$contrib.status[i]=="Pledge"){
if(class(x$contrib.amount[i])=="numeric"){
pledges <- pledges+x$contrib.amount[i]
}
}else if(x$contrib.status[i]=="Commitment"){
if(class(x$contrib.amount[i])=="numeric"){
commited <- commited+x$contrib.amount[i]
}
}else if(x$contrib.status[i]=="Paid contribution"){
if(class(x$contrib.amount[i])=="numeric"){
contributed <- contributed+x$contrib.amount[i]
}
}
}
}
keep <- colnames(contrib)[which(substr(colnames(contrib),1,2)=="pr")]
y <- x[keep][1,]
y$pledges <- pledges
y$commited <- commited
y$contributed <- contributed
return(y)
})
#install.packages("rsdmx")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("httpuv")
#install.packages("googlesheets")
#install.packages("rvest")
library(rsdmx)
library(plyr)
suppressPackageStartupMessages(library("dplyr"))
library(httpuv)
library(googlesheets)
library(rvest)
#Configuration
setwd("C:/git/alexm-util/DevInit/R/GHA/Country_Profiles")
startYear <- "1990"
endYear <- "2015"
shares <- list(
WFP = 0.913364375831843
,UNICEF = 0.246929100907661
,UNHCR = 1
,UNRWA = 1
)
#OECD Func####
OECD <- function(url,concept=FALSE){
#Separate out data URL components
dRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/"
indicator <- strsplit(substr(url,nchar(dRoot)+1,nchar(url)),"/")[[1]][1]
filter <- substr(url,nchar(dRoot)+1+nchar(indicator),nchar(url))
#Structure URL
sRoot <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetDataStructure/"
t1sUrl <- paste(sRoot
,indicator
,sep = "")
#Fetch data
t1dsdmx <- readSDMX(url)
t1ssdmx <- readSDMX(t1sUrl)
#Convert to DF
t1 <- as.data.frame(t1dsdmx)
#get codelists
cls <- t1ssdmx@codelists
codelists <- sapply(cls@codelists, function(x) x@id)
#Recode
for(i in 1:length(codelists)){
suffix <- paste("CL_",indicator,"_",sep="")
clName <- substr(codelists[i],nchar(suffix)+1,nchar(codelists[i]))
codelist <- cls@codelists[i][[1]]@Code
for(j in 1:length(codelist)){
id <- codelist[j][[1]]@id
name <- codelist[j][[1]]@label$en
if(clName %in% colnames(t1)){
t1[clName][which(t1[clName]==id),] <- name
}
}
}
#get concepts
concepts <- as.data.frame(t1ssdmx@concepts)
if(concept){
return(concepts)
}else{
return(t1)
}
}
if(as.integer(startYear)>=2006){cerfStart <- as.integer(startYear)}else{cerfStart <- 2006}
CERFyears <- c(cerfStart:as.integer(endYear))
fromUrl <- "https://cerf.unocha.org/admin/Webservices/SummaryFundingadv.aspx?type=country&year="
toUrl <- "http://www.unocha.org/cerf/our-donors/funding/pledges-and-contributions/"
if(exists("fromCERF")){rm(fromCERF)}
if(exists("toCERF")){rm(toCERF)}
for(i in 1:length(CERFyears)){
year <- CERFyears[i]
#From
page <- html(paste0(fromUrl,year))
fromCERFtmp <- page %>%
html_node("table") %>%
html_table(fill=TRUE)
fromCERFtmp <- fromCERFtmp[,c(2,3)]
fromCERFtmp$obsTime <- year
fromCERFtmp$DONOR <- "Central Emergency Response Fund"
names(fromCERFtmp) <- c("RECIPIENT","obsValue","obsTime","DONOR")
fromCERFtmp$obsValue <- as.numeric(gsub(",","", fromCERFtmp$obsValue))
fromCERFtmp <- subset(fromCERFtmp,!is.na(RECIPIENT))
fromCERFtmp <- subset(fromCERFtmp, !grepl("Country",RECIPIENT))
fromCERFtmp <- subset(fromCERFtmp, !grepl("Total",RECIPIENT))
fromCERFtmp <- subset(fromCERFtmp, !grepl(as.character(year),RECIPIENT))
if(exists("fromCERF")){fromCERF <- rbind(fromCERF,fromCERFtmp)}else{fromCERF <- fromCERFtmp}
rm(page)
#To
page <- html(paste0(toUrl,year))
toCERFtmp <- page %>%
html_node("table") %>%
html_table(fill=TRUE)
if("Donors" %in% names(toCERFtmp)){
toCERFtmp <- toCERFtmp[,c(2,3)]
toCERFtmp$obsTime <- year
toCERFtmp$RECIPIENT <- "Central Emergency Response Fund"
names(toCERFtmp) <- c("DONOR","obsValue","obsTime","RECIPIENT")
toCERFtmp$obsValue <- as.numeric(gsub(",","", toCERFtmp$obsValue))
toCERFtmp <- subset(toCERFtmp,!is.na(DONOR))
if(exists("toCERF")){toCERF <- rbind(toCERF,toCERFtmp)}else{toCERF <- toCERFtmp}
}
rm(page)
}
