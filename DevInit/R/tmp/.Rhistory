?View
?mtcars
#Install packages
install.packages("plyr")
library(plyr)
install.packages("devtools")
require(devtools)
find_rtools()
find_rtools()
require(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("Rserve")
library("Rserve")
Rserve(args="--no-save")
Rserve()
install.packages('zoo')
require(zoo)
require('zoo')
install.packages('zoo')
install.packages('foreign')
require(foreign)
path<- "C:/Users/alexm/AppData/Roaming/Skype/My Skype Received Files/allginis_2014.dta"
df <- read.dta(path)
View(df)
csv.write("C:/git/alexm-utils/DevInit/R/allginis_2014.csv",row.names=FALSE)
write.csv("C:/git/alexm-utils/DevInit/R/allginis_2014.csv",row.names=FALSE)
write.csv("C:/git/alexm-util/DevInit/R/allginis_2014.csv",row.names=FALSE)
write.csv("C:/git/alexm-util/DevInit/R/allginis_2014.csv",row.names=FALSE)
getwd()
write.csv("allginis_2014.csv",row.names=FALSE)
write.csv(df,"allginis_2014.csv",row.names=FALSE)
write.csv(df,"allginis_2014.csv",row.names=FALSE,na="")
#install.packages('zoo')
#install.packages('plyr')
require(zoo)
require(plyr)
setwd("C:/git/alexm-util/DevInit/R/tmp")
interpolateCol <- function(data,colname)
{
return(
ddply(data,.(id),function(x)
{
naLen <- nrow(x[which(is.na(x[,colname])),])
allLen <- nrow(x)
valueLen <- allLen-naLen
ival <- x[,colname]
x[,paste("original",colname,sep="-")] <- ival
if(valueLen>=2)
{
interpVals <- na.approx(x[,colname])
xIndex = 1
while(is.na(x[,colname][xIndex])){xIndex<-xIndex+1}
for(i in 1:length(interpVals))
{
ival[xIndex] <- interpVals[i]
xIndex<-xIndex+1
}
}
x[,colname] <- ival
return(x)
}
)
)
}
data <- read.csv("C:/git/alexm-util/DevInit/R/pov_long.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE)
names <- colnames(data)
data <- interpolateCol(data,"value")
write.csv(data,"employment-by-sector.csv",row.names=FALSE,na="")
#install.packages('zoo')
#install.packages('plyr')
require(zoo)
require(plyr)
setwd("C:/git/alexm-util/DevInit/R/tmp")
interpolateCol <- function(data,colname)
{
return(
ddply(data,.(id),function(x)
{
naLen <- nrow(x[which(is.na(x[,colname])),])
allLen <- nrow(x)
valueLen <- allLen-naLen
ival <- x[,colname]
x[,paste("original",colname,sep="-")] <- ival
if(valueLen>=2)
{
interpVals <- na.approx(x[,colname])
xIndex = 1
while(is.na(x[,colname][xIndex])){xIndex<-xIndex+1}
for(i in 1:length(interpVals))
{
ival[xIndex] <- interpVals[i]
xIndex<-xIndex+1
}
}
x[,colname] <- ival
return(x)
}
)
)
}
data <- read.csv("C:/git/alexm-util/DevInit/R/pov_long.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE)
names <- colnames(data)
data <- interpolateCol(data,"value")
write.csv(data,"pov_long.csv",row.names=FALSE,na="")
