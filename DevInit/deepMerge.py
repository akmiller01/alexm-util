from collections import OrderedDict
import pdb

data = OrderedDict([
    (u'personA',
           OrderedDict([
                (u'score', 
                    OrderedDict([
                        (u'2015-09-09 03:40:33 +0100', 2646), 
                        (u'2015-09-10 03:35:34 +0100', 2646), 
                    ])
                ),
                (u'adjusted_score' ,
                    OrderedDict([
                        (u'2015-09-09 03:40:33 +0100', 3646), 
                        (u'2015-09-10 03:35:34 +0100', 3646), 
                    ])
                ),
            ])
    ),

    (u'personB',
           OrderedDict([
                (u'score', 
                    OrderedDict([
                        (u'2015-09-11 03:40:33 +0100', 4646), 
                        (u'2015-09-12 03:35:34 +0100', 4646), 
                                ])
                ),
                (u'adjusted_score', 
                    OrderedDict([
                        (u'2015-09-11 03:40:33 +0100', 5646), 
                        (u'2015-09-12 03:35:34 +0100', 5646), 
                    ])
                ),
            ])
    )
])

a = OrderedDict([(u'2015-09-15 03:40:49 +0100', u'2015-08-28'), (u'2015-09-16 03:37:32 +0100', u'2015-08-28'), (u'2015-09-17 03:31:34 +0100', u'2015-08-28'), (u'2015-09-18 03:43:15 +0100', u'2015-08-28'), (u'2015-09-19 03:02:32 +0100', u'2015-08-28'), (u'2015-09-20 02:46:41 +0100', u'2015-08-28'), (u'2015-09-21 02:06:09 +0100', u'2015-08-28'), (u'2015-09-22 02:02:36 +0100', u'2015-08-28'), (u'2015-09-23 02:09:06 +0100', u'2015-08-28'), (u'2015-09-24 02:05:22 +0100', u'2015-08-28'), (u'2015-09-25 02:06:24 +0100', u'2015-08-28'), (u'2015-09-26 02:05:07 +0100', u'2015-08-28'), (u'2015-09-27 02:00:58 +0100', u'2015-08-28'), (u'2015-09-28 02:12:28 +0100', u'2015-08-28'), (u'2015-09-29 02:03:53 +0100', u'2015-08-28'), (u'2015-09-30 02:03:36 +0100', u'2015-08-28'), (u'2015-10-01 02:06:05 +0100', u'2015-08-28'), (u'2015-10-02 02:08:30 +0100', u'2015-08-28'), (u'2015-10-03 02:02:56 +0100', u'2015-08-28'), (u'2015-10-04 02:53:02 +0100', u'2015-08-28'), (u'2015-10-05 02:11:32 +0100', u'2015-08-28'), (u'2015-10-06 02:16:33 +0100', u'2015-08-28'), (u'2015-10-07 02:03:02 +0100', u'2015-08-28'), (u'2015-10-08 02:26:47 +0100', u'2015-08-28'), (u'2015-10-09 02:34:03 +0100', u'2015-08-28'), (u'2015-10-10 02:02:25 +0100', u'2015-08-28'), (u'2015-10-11 02:01:49 +0100', u'2015-08-28'), (u'2015-10-12 02:16:25 +0100', u'2015-08-28'), (u'2015-10-13 04:00:16 +0100', u'2015-08-28'), (u'2015-10-14 02:14:16 +0100', u'2015-08-28'), (u'2015-10-15 02:00:19 +0100', u'2015-08-28'), (u'2015-10-16 02:07:26 +0100', u'2015-08-28'), (u'2015-10-17 02:27:27 +0100', u'2015-09-30'), (u'2015-10-18 02:06:37 +0100', u'2015-09-30'), (u'2015-10-19 02:01:05 +0100', u'2015-09-30'), (u'2015-10-20 02:26:33 +0100', u'2015-09-30'), (u'2015-10-21 02:05:58 +0100', u'2015-09-30'), (u'2015-10-22 02:13:37 +0100', u'2015-09-30'), (u'2015-10-23 02:04:40 +0100', u'2015-09-30'), (u'2015-10-24 02:05:01 +0100', u'2015-09-30'), (u'2015-10-25 01:02:53 +0000', u'2015-09-30'), (u'2015-10-26 02:08:33 +0000', u'2015-09-30'), (u'2015-10-27 02:08:25 +0000', u'2015-09-30'), (u'2015-10-28 02:04:35 +0000', u'2015-09-30'), (u'2015-10-29 02:08:47 +0000', u'2015-09-30'), (u'2015-10-30 02:07:07 +0000', u'2015-09-30'), (u'2015-10-31 02:11:51 +0000', u'2015-09-30'), (u'2015-11-01 02:10:23 +0000', u'2015-09-30'), (u'2015-11-02 02:15:59 +0000', u'2015-09-30'), (u'2015-11-03 02:19:13 +0000', u'2015-09-30'), (u'2015-11-04 02:13:57 +0000', u'2015-10-30'), (u'2015-11-05 02:21:31 +0000', u'2015-10-30'), (u'2015-11-06 02:12:10 +0000', u'2015-10-30'), (u'2015-11-07 02:33:37 +0000', u'2015-10-30'), (u'2015-11-08 02:16:03 +0000', u'2015-10-30'), (u'2015-11-09 02:10:27 +0000', u'2015-10-30'), (u'2015-11-10 02:27:35 +0000', u'2015-10-30'), (u'2015-11-11 02:19:39 +0000', u'2015-10-30'), (u'2015-11-12 02:07:24 +0000', u'2015-10-30'), (u'2015-11-13 02:06:01 +0000', u'2015-10-30'), (u'2015-11-14 02:18:59 +0000', u'2015-10-30'), (u'2015-11-15 02:06:40 +0000', u'2015-10-30'), (u'2015-11-16 02:14:14 +0000', u'2015-10-30'), (u'2015-11-17 02:07:51 +0000', u'2015-10-30'), (u'2015-11-18 02:12:04 +0000', u'2015-10-30'), (u'2015-11-19 02:05:20 +0000', u'2015-10-30'), (u'2015-11-20 02:09:55 +0000', u'2015-10-30'), (u'2015-11-21 02:07:29 +0000', u'2015-10-30'), (u'2015-11-22 02:05:40 +0000', u'2015-10-30'), (u'2015-11-23 02:14:45 +0000', u'2015-10-30'), (u'2015-11-24 02:06:51 +0000', u'2015-10-30'), (u'2015-11-25 02:09:28 +0000', u'2015-10-30'), (u'2015-11-26 02:15:36 +0000', u'2015-10-30'), (u'2015-11-27 02:08:46 +0000', u'2015-10-30'), (u'2015-11-28 02:19:17 +0000', u'2015-10-30'), (u'2015-11-29 02:16:08 +0000', u'2015-10-30'), (u'2015-11-30 02:12:07 +0000', u'2015-10-30')])
b = OrderedDict([(u'2015-09-09 03:40:33 +0100', u'2015-08-28'), (u'2015-09-10 03:35:34 +0100', u'2015-08-28'), (u'2015-09-11 02:26:33 +0100', u'2015-08-28'), (u'2015-09-12 03:27:11 +0100', u'2015-08-28'), (u'2015-09-13 03:32:59 +0100', u'2015-08-28'), (u'2015-09-14 03:33:06 +0100', u'2015-08-28')])

print("Length a, before merge:",len(a))
print("Length b, before merge:",len(b))

def deepMerge(obj1,obj2):
    #iterate through keys
    for key in obj1:
        #if it's a value, we've hit the bottom, copy all of obj2 into obj1
        if type(obj1[key]) is not OrderedDict:
            for key2 in obj2:
                obj1[key2] = obj2[key2]
        #if it's a dictionary we need to go deeper
        else:
            if key in obj2:
                deepMerge(obj1[key],obj2[key])
                
#deepMerge(data['personA'],data['personB'])
deepMerge(a,b)
print("Length a, after merge:",len(a))
print("Length b, after merge:",len(b))