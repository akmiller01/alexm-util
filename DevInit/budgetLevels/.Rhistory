colnames(dummies.final)
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
wealth <- u.alpha+(u.beta*u.wealth)
colnames(urban.dummies)
colnames(wealth)
urban.dummies <- cbind(urban.dummies,wealth)
colnames(urban.dummies)
gc()
wealth <- r.alpha+(r.beta*r.wealth)
rural.dummies <- cbind(rural.dummies,wealth)
gc()
colnames(rural.dummies)
colnames(rural.dummies)[365] <- "u.wealth"
colnames(rural.dummies)
dummies.final <- rbind(urban.dummies,rural.dummies)
colnames(dummies.final)
save(dummies.final,file="composite_global_wealth.RData")
library(Hmisc)
describe(urban.dummies$wealth)
describe(rural.dummies$wealth)
describe(urban.dummies[,"wealth"])
describe(rural.dummies[,"wealth"])
colnames(dummies.final)
rownames(dummies.final)
save(dummies.final,file="composite_global_wealth.RData")
r.alpha
u.alpha
u.beta
r.beta
mean((u.beta*u.wealth))
mean(u.alpha+(u.beta*u.wealth))
mean(u.wealth)
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
mean(urban.dummies[,"c.wealth"])
mean(urban.dummies[,"u.wealth"])
mean(u.alpha+(u.beta*u.wealth))
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
wealth <- u.alpha+(u.beta*u.wealth)
urban.dummies <- cbind(urban.dummies,wealth)
gc()
wealth <- r.alpha+(r.beta*r.wealth)
rural.dummies <- cbind(rural.dummies,wealth)
gc()
colnames(rural.dummies)[365] <- "u.wealth"
dummies.final <- rbind(urban.dummies,rural.dummies)
gc()
save(dummies.final,file="composite_global_wealth.RData")
load("D:/Documents/Data/MICSmeta/composite_global_wealth.RData")
wealths <- dummies.final[,c("c.wealth","u.wealth","wealth")]
c("c.wealth","u.wealth","wealth") %in% colnames(dummies.final)
colnames(dummies.final)
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
wealth <- u.alpha+(u.beta*u.wealth)
urban.dummies <- cbind(urban.dummies,wealth)
gc()
wealth <- r.alpha+(r.beta*r.wealth)
rural.dummies <- cbind(rural.dummies,wealth)
gc()
colnames(rural.dummies)[365] <- "u.wealth"
dummies.final <- rbind(urban.dummies,rural.dummies)
gc()
save(dummies.final,file="composite_global_wealth.RData")
colnames(dummies.final)
rm(urban.dummies)
gc()
rm(rural.dummies)
gc()
wealths <- dummies.final[,c("c.wealth","u.wealth","wealth")]
gc()
rm(dummies.final)
gc()
colnames(wealths)
rownames(wealths)
load("gcw.RData")
load("D:/Documents/Data/MICSmeta/gcw.RData")
nrow(wealths)
nrow(gcw)
nrow(wealths)<=nrow(gcw)
gcw <- cbind(gcw, wealths[match(rownames(gcw),rownames(wealths)),])
colnames(gcw)
library(Hmisc)
describe(gcw$wealth)
save(gcw,file="gcw_wealth.RData")
View(gcw)
gcw <- gcw[order(gcw$wealth),]
View(gcw)
gcw <- gcw[order(-gcw$wealth),]
View(gcw)
hist(gcw$wealth)
percentile
quantile
?quantile
quantile(gcw$wealth,probs=0.2)
quantile(gcw$wealth,probs=0.2,na.rm=TRUE)
gcw$p20 <- gcw$wealth <= quantile(gcw$wealth,probs=0.2,na.rm=TRUE)
describe(gcw$p20)
gcw$wealth <- gcw$wealth*-1
gcw <- gcw[order(gcw$wealth),]
gcw$p20 <- gcw$wealth <= quantile(gcw$wealth,probs=0.2,na.rm=TRUE)
describe(gcw$p20)
p20 <- subset(gcw,p20==TRUE)
table(p20$filename)
p20 <- subset(gcw,p20==TRUE)
p20.table <- data.frame(table(p20$filename))
View(p20.table)
names(p20.table)
p20.table <- p20.table[order(-p20.table$Freq),]
View(p20.table)
names(p20.table)
names(p20.table) <- c("Filename","Raw household count")
write.csv(p20.table,"global_wealth_p20.csv"row.names=FALSE)
write.csv(p20.table,"global_wealth_p20.csv",row.names=FALSE)
getwd()
library(data.table)
gcw.tab <- data.table(gcw)
names(gcw)
gcw.tab <- gcw.tab[,.(hc=weighted.mean(p20,weights,na.rm=TRUE)),by=.(filename)]
View(gcw.tab)
gcw.tab$hc <- gcw.tab$hc*100
View(gcw.tab)
gcw.tab <- gcw.tab[order(-gcw.tab$hc),]
View(gcw.tab)
write.csv(gcw.tab,"global_wealth_p20_hc.csv",row.names=FALSE)
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
rm(urban.dummies)
rum(rural.dummies)
rm(rural.dummies)
gc()
mean(r.wealth)
mean(u.wealth)
hist(r.wealth)
hist(u.wealth)
hist(c(r.wealth,u.wealth))
gc()
load("D:/Documents/Data/MICSmeta/gcw_wealth.RData")
names(gcw)
load("D:/Documents/Data/MICSmeta/composite_global_wealth.RData")
"wealth" %in% names(gcw)
wealths <- dummies.final[,c("c.wealth","u.wealth","wealth")]
names(dummies.final)
colnames(dummies.final)
load("D:/Documents/Data/MICSmeta/composite_global_wealth.RData")
colnames(dummies.final)
load("D:/Documents/Data/MICSmeta/final_ingredients.RData")
wealth <- u.alpha+(u.beta*u.wealth)
urban.dummies <- cbind(urban.dummies,wealth)
gc()
wealth <- r.alpha+(r.beta*r.wealth)
rural.dummies <- cbind(rural.dummies,wealth)
gc()
colnames(rural.dummies)[365] <- "u.wealth"
dummies.final <- rbind(urban.dummies,rural.dummies)
gc()
colnames(dummies.final)
wealths <- dummies.final[,c("c.wealth","u.wealth","wealth")]
load("D:/Documents/Data/MICSmeta/gcw.RData")
nrow(wealths)<=nrow(gcw)
gcw <- cbind(gcw, wealths[match(rownames(gcw),rownames(wealths)),])
mean(r.wealth)
mean(u.wealth)
mean(rural.dummies$wealth)
mean(rural.dummies[,"wealth"])
mean(urban.dummies[,"wealth"])
gcw$wealth <- gcw$wealth*-1
gcw <- gcw[order(gcw$wealth),]
gcw$p20 <- gcw$wealth <= quantile(gcw$wealth,probs=0.34,na.rm=TRUE)
p20 <- subset(gcw,p20==TRUE)
p20.table <- data.frame(table(p20$filename))
p20.table <- p20.table[order(-p20.table$Freq),]
names(p20.table) <- c("Filename","Raw household count")
View(p20.table)
library(data.table)
gcw.tab <- data.table(gcw)
gcw.tab <- gcw.tab[,.(hc=weighted.mean(p20,weights,na.rm=TRUE)),by=.(filename)]
gcw.tab$hc <- gcw.tab$hc*100
gcw.tab <- gcw.tab[order(-gcw.tab$hc),]
getwd()
write.csv(gcw.tab,"global_wealth_p20_hc_new.csv",row.names=FALSE)
gcw$p20 <- gcw$wealth <= quantile(gcw$wealth,probs=0.20,na.rm=TRUE)
gcw$p34 <- gcw$wealth <= quantile(gcw$wealth,probs=0.34,na.rm=TRUE)
p20 <- subset(gcw,p20==TRUE)
p20.table <- data.frame(table(p20$filename))
p20.table <- p20.table[order(-p20.table$Freq),]
names(p20.table) <- c("Filename","Raw household count")
library(data.table)
gcw.tab <- data.table(gcw)
gcw.tab <- gcw.tab[,.(hc=weighted.mean(p20,weights,na.rm=TRUE)),by=.(filename)]
gcw.tab$hc <- gcw.tab$hc*100
gcw.tab <- gcw.tab[order(-gcw.tab$hc),]
write.csv(gcw.tab,"global_wealth_p20_hc_new.csv",row.names=FALSE)
gcw.tab <- gcw.tab[,.(hc20=weighted.mean(p20,weights,na.rm=TRUE),hc34=weighted.mean(p34,weights,na.rm=TRUE)),by=.(filename)]
gcw$p34 <- gcw$wealth <= quantile(gcw$wealth,probs=0.34,na.rm=TRUE)
gcw.tab <- data.table(gcw)
gcw.tab <- gcw.tab[,.(hc20=weighted.mean(p20,weights,na.rm=TRUE),hc34=weighted.mean(p34,weights,na.rm=TRUE)),by=.(filename)]
gcw.tab$hc <- gcw.tab$hc*100
gcw.tab$hc20 <- gcw.tab$hc20*100
gcw.tab$hc34 <- gcw.tab$hc34*100
gcw.tab <- gcw.tab[order(-gcw.tab$hc),]
gcw.tab <- gcw.tab[order(-gcw.tab$hc20),]
write.csv(gcw.tab,"global_wealth_p20_hc_new.csv",row.names=FALSE)
rgb(251, 197, 208,1,maxColorValue=255)
library(foreign)
setwd("D:/GADM/GADM1 joined with ACLED")
dat <- read.dbf("p20.dbf",as.is=TRUE)
names(dat)
fit <- lm(meanp20~fatal_pp,data=dat)
summary(fit)
fit <- lm(meanp20~sumFATALIT,data=dat)
summary(fit)
fit <- lm(meanp20~sumFATALIT+X_sum,data=dat)
summary(fit)
dat <- transform(dat,logpop = log(X_sum))
fit <- lm(meanp20~sumFATALIT+logpop,data=dat)
summary(fit)
plot(meanp20~sumFATALIT,data=dat)
plot(meanp20~fatal_pp,data=dat)
plot(meanp20~sumFATALIT,data=dat)
dat <- transform(dat,logpop = log(X_sum),logfatal = log(sumFATALIT))
fit <- lm(meanp20~logfatal+logpop,data=dat)
dat <- subset(dat,is.finite(logfatal))
fit <- lm(meanp20~logfatal+logpop,data=dat)
summary(fit)
fit <- lm(meanp20~logfatal,data=dat)
summary(fit)
plot(meanp20~logfatal,data=dat)
dat <- transform(dat,logpop = log(X_sum),logfatal = log(sumFATALIT),logfatalpp = log(fatal_pp))
plot(meanp20~logfatalpp,data=dat)
plot(meanp20~logfatal,data=dat)
library(foreign)
setwd("D:/GADM/GADM1 joined with ACLED")
dat <- read.dbf("p20.dbf",as.is=TRUE)
fit <- lm(meanp20~fatal_pp,data=dat)
summary(fit)
dat <- transform(dat,logpop = log(X_sum),logfatal = log(sumFATALIT))
dat <- subset(dat,is.finite(logfatal))
fit <- lm(meanp20~logfatal+logpop,data=dat)
summary(fit)
ug <- subset(dat,DHScc=="UG")
ug <- subset(dat,DHSCC=="UG")
names(ug)
names(dat)
dat$NAME_0
ug <- subset(dat,NAME_0=="Uganda")
fit <- lm(meanp20~fatal_pp,data=ug)
summary(fit)
plot(meanp20~fatal_pp,data=ug)
plot(meanp20~log(fatal_pp),data=ug)
fit <- lm(meanp20~log(fatal_pp),data=ug)
summary(fit)
wd <- "C:/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
names(df)[names(df) == "iso"] <- "id"
mult <- read.csv("D:/git/digital-platform/reference/current-ncu-to-constant-2012-usd.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(mult)[names(mult)=="value"] <- "value.mult"
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
df <- merge(
df
,mult
,by=c("id","year")
)
# df <- transform(df,value=value.mult*value.ncu)
df <- transform(df,value=value.ncu)
df <- transform(df,l1=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l1))))
df <- transform(df,l2=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l2))))
df <- transform(df,l3=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l3))))
df <- transform(df,l4=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l4))))
df <- transform(df,l5=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l5))))
df <- transform(df,l6=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l6))))
keep <- c(1,2,5,6,7,8,9,10,11,12,13)
df <- df[keep]
names(df)[names(df) == "value.ncu"] <- "value-ncu"
names(df)[names(df) == "type"] <- "budget-type"
write.csv(df,"./results_ncu.csv",row.names=FALSE,na="")
names(df)
df <- read.csv("./results.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(levels),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(unique(levels)),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
old.levels <- read.csv("D:/git/digital-platform/reference/domestic-budget-level.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
sectoral <- subset(old.levels,sectoral==TRUE)
old.levels <- old.levels[c(1,2,3,5)]
levels <- merge(
levels
,old.levels
,by=intersect(names(levels),names(old.levels))
,all.x=TRUE
)
levels <- levels[order(levels$id)[!duplicated(sort(levels$id))],]
new.levels <- rbind(levels,sectoral)
new.levels <- unique(new.levels)
write.csv(new.levels,"./results_levels.csv",row.names=FALSE,na="")
wd <- "C:/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
wd <- "C:/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-","--")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
wd <- "C:/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-","--")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
names(df)[names(df) == "iso"] <- "id"
mult <- read.csv("D:/git/digital-platform/reference/current-ncu-to-constant-2012-usd.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(mult)[names(mult)=="value"] <- "value.mult"
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
df <- merge(
df
,mult
,by=c("id","year")
)
# df <- transform(df,value=value.mult*value.ncu)
df <- transform(df,value=value.ncu)
df <- transform(df,l1=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l1))))
df <- transform(df,l2=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l2))))
df <- transform(df,l3=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l3))))
df <- transform(df,l4=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l4))))
df <- transform(df,l5=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l5))))
df <- transform(df,l6=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l6))))
keep <- c(1,2,5,6,7,8,9,10,11,12,13)
df <- df[keep]
names(df)[names(df) == "value.ncu"] <- "value-ncu"
names(df)[names(df) == "type"] <- "budget-type"
write.csv(df,"./results_ncu.csv",row.names=FALSE,na="")
names(df)
df <- read.csv("./results.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(levels),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(unique(levels)),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
old.levels <- read.csv("D:/git/digital-platform/reference/domestic-budget-level.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
sectoral <- subset(old.levels,sectoral==TRUE)
old.levels <- old.levels[c(1,2,3,5)]
levels <- merge(
levels
,old.levels
,by=intersect(names(levels),names(old.levels))
,all.x=TRUE
)
levels <- levels[order(levels$id)[!duplicated(sort(levels$id))],]
new.levels <- rbind(levels,sectoral)
new.levels <- unique(new.levels)
write.csv(new.levels,"./results_levels.csv",row.names=FALSE,na="")
wd <- "C:/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-","--")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
names(df)[names(df) == "iso"] <- "id"
mult <- read.csv("D:/git/digital-platform/reference/current-ncu-to-constant-2012-usd.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(mult)[names(mult)=="value"] <- "value.mult"
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
# df <- merge(
#   df
#   ,mult
#   ,by=c("id","year")
# )
# df <- transform(df,value=value.mult*value.ncu)
df <- transform(df,value=value.ncu)
df <- transform(df,l1=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l1))))
df <- transform(df,l2=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l2))))
df <- transform(df,l3=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l3))))
df <- transform(df,l4=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l4))))
df <- transform(df,l5=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l5))))
df <- transform(df,l6=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l6))))
keep <- c(1,2,5,6,7,8,9,10,11,12,13)
df <- df[keep]
names(df)[names(df) == "value.ncu"] <- "value-ncu"
names(df)[names(df) == "type"] <- "budget-type"
write.csv(df,"./results_ncu.csv",row.names=FALSE,na="")
names(df)
df <- read.csv("./results.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(levels),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(unique(levels)),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
old.levels <- read.csv("D:/git/digital-platform/reference/domestic-budget-level.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
sectoral <- subset(old.levels,sectoral==TRUE)
old.levels <- old.levels[c(1,2,3,5)]
levels <- merge(
levels
,old.levels
,by=intersect(names(levels),names(old.levels))
,all.x=TRUE
)
levels <- levels[order(levels$id)[!duplicated(sort(levels$id))],]
new.levels <- rbind(levels,sectoral)
new.levels <- unique(new.levels)
write.csv(new.levels,"./results_levels.csv",row.names=FALSE,na="")
