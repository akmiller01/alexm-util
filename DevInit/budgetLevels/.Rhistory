}
else if(cmonth==bmonth){
age.months <- (cyear - byear)*12
}else if(cmonth>bmonth){
age.months <- (cyear - byear)*12 + (cmonth-bmonth)
}else if(cmonth<bmonth){
age.months <- ((cyear - byear) - 1)*12 + (12 - (bmonth-cmonth))
}
if(!is.na(age.months)){
if(age.months<0){
age.months <- 0
}
}
age.monthsV <- c(age.monthsV,age.months)
}
return(age.monthsV)
}
ch$tb1m_a_p[which(ch$tb1m_a_p<0)] <- NA
ch$cfps2012_age[which(ch$cfps2012_age<0)] <- NA
ch$age.months <- code.age.months(ch$cyear,ch$cmonth,ch$cfps2012_birthy_best,ch$tb1m_a_p,ch$cfps2012_age)
names(ch)[which(names(ch)=="wa103")] <- "weight.kg"
ch$weight.kg[which(ch$weight.kg<0)] <- NA
ch$weight.kg <- ch$weight.kg/2
names(ch)[which(names(ch)=="wa104")] <- "height.cm"
ch$height.cm[which(ch$height.cm<0)] <- NA
ch <- subset(ch,age.months<=60)
names(ch)[which(names(ch)=="cfps2012_gender")] <- "gender"
ch$gender <- unfactor(ch$gender)
ch$gender[which(ch$gender=="NA")] <- NA
ch$gender[which(ch$gender=="Male")] <- 1
ch$gender[which(ch$gender=="Female")] <- 2
names(ch)[which(names(ch)=="rswt_natcs12")] <- "weights"
ch$weights <- ch$weights/100000
names(ch)[which(names(ch)=="cid")] <- "cluster"
names(ch)[which(names(ch)=="fid12")] <- "household"
ch <- ch[complete.cases(ch[c("weight.kg","height.cm","age.months","gender","weights")]),]
keep <- c("cluster","household","pid","weight.kg","height.cm","age.months","gender","weights")
ch <- ch[keep]
descibe(ch$gender)
describe(ch$gender)
install.packages("varhandle")
library(varhandle)
load("dat2012.RData")
famros.birthdays <- famros[c("pid","fid12","tb1y_a_p","tb1m_a_p")]
ch <- data.frame(child,as.is=TRUE,check.names=FALSE)
ch <- join(
ch
,famros.birthdays
,by=c("pid","fid12")
)
code.age.months <- function(cyearV,cmonthV,byearV,bmonthV,ageV){
age.monthsV <- c()
for(i in 1:length(cyearV)){
cyear <- cyearV[i]
cmonth <- cmonthV[i]
byear <- byearV[i]
bmonth <- bmonthV[i]
age <- ageV[i]
if(is.na(bmonth)){
age.months <- age*12
}
else if(cmonth==bmonth){
age.months <- (cyear - byear)*12
}else if(cmonth>bmonth){
age.months <- (cyear - byear)*12 + (cmonth-bmonth)
}else if(cmonth<bmonth){
age.months <- ((cyear - byear) - 1)*12 + (12 - (bmonth-cmonth))
}
if(!is.na(age.months)){
if(age.months<0){
age.months <- 0
}
}
age.monthsV <- c(age.monthsV,age.months)
}
return(age.monthsV)
}
ch$tb1m_a_p[which(ch$tb1m_a_p<0)] <- NA
ch$cfps2012_age[which(ch$cfps2012_age<0)] <- NA
ch$age.months <- code.age.months(ch$cyear,ch$cmonth,ch$cfps2012_birthy_best,ch$tb1m_a_p,ch$cfps2012_age)
names(ch)[which(names(ch)=="wa103")] <- "weight.kg"
ch$weight.kg[which(ch$weight.kg<0)] <- NA
ch$weight.kg <- ch$weight.kg/2
names(ch)[which(names(ch)=="wa104")] <- "height.cm"
ch$height.cm[which(ch$height.cm<0)] <- NA
ch <- subset(ch,age.months<=60)
names(ch)[which(names(ch)=="cfps2012_gender")] <- "gender"
ch$gender <- unfactor(ch$gender)
ch$gender[which(ch$gender=="NA")] <- NA
ch$gender[which(ch$gender=="Male")] <- 1
ch$gender[which(ch$gender=="Female")] <- 2
names(ch)[which(names(ch)=="rswt_natcs12")] <- "weights"
ch$weights <- ch$weights/100000
names(ch)[which(names(ch)=="cid")] <- "cluster"
names(ch)[which(names(ch)=="fid12")] <- "household"
ch <- ch[complete.cases(ch[c("weight.kg","height.cm","age.months","gender","weights")]),]
keep <- c("cluster","household","pid","weight.kg","height.cm","age.months","gender","weights")
ch <- ch[keep]
describe(ch$gender)
hist(ch$age.months)
igu.dir <- "~/igrowup_R/"
weianthro<-read.table(paste0(igu.dir,"/weianthro.txt"),header=T,sep="",skip=0)
lenanthro<-read.table(paste0(igu.dir,"/lenanthro.txt"),header=T,sep="",skip=0)
bmianthro<-read.table(paste0(igu.dir,"/bmianthro.txt"),header=T,sep="",skip=0)
hcanthro<-read.table(paste0(igu.dir,"/hcanthro.txt"),header=T,sep="",skip=0)
acanthro<-read.table(paste0(igu.dir,"/acanthro.txt"),header=T,sep="",skip=0)
ssanthro<-read.table(paste0(igu.dir,"/ssanthro.txt"),header=T,sep="",skip=0)
tsanthro<-read.table(paste0(igu.dir,"/tsanthro.txt"),header=T,sep="",skip=0)
wflanthro<-read.table(paste0(igu.dir,"/wflanthro.txt"),header=T,sep="",skip=0)
wfhanthro<-read.table(paste0(igu.dir,"/wfhanthro.txt"),header=T,sep="",skip=0)
source(paste0(igu.dir,"igrowup_standard.r"))
source(paste0(igu.dir,"igrowup_restricted.r"))
igrowup.restricted(FileLab="ch",FilePath=igu.dir,
mydf=ch, sex=gender
, age=age.months, age.month=TRUE
, weight=weight.kg
, lenhei=height.cm
, sw=weights)
zscores <- read.csv(paste0(igu.dir,"ch_z_rc.csv"))
zscores <- read.csv(paste0(igu.dir,"ch_z_rc.csv"))
describe(zscores$flen)
plot(zscores$zlen[order(zscores$zlen)])
hist(zscores$flen)
hist(zscores$zlen)
hist(zscores$zlen,main="Height for age Zscores, CFPS 2012")
hist(zscores$zlen,main="Height for age z-scores, CFPS 2012")
hist(zscores$zlen,main="Height for age z-scores, CFPS 2012",xlab="Z-score")
h4a.tab <- table(zscores$height.cm,zscores$weight.kg)
h4a.tab
plot(h4a.tab)
plot(height.cm~weight.kg,data=zscores)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
describe(zscores)
describe(zscores)
describe(zscores)
famros.birthdays <- famros[c("pid","fid12","tb1y_a_p","tb1m_a_p")]
ch <- data.frame(child,as.is=TRUE,check.names=FALSE)
ch <- join(
ch
,famros.birthdays
,by=c("pid","fid12")
)
code.age.months <- function(cyearV,cmonthV,byearV,bmonthV,ageV){
age.monthsV <- c()
for(i in 1:length(cyearV)){
cyear <- cyearV[i]
cmonth <- cmonthV[i]
byear <- byearV[i]
bmonth <- bmonthV[i]
age <- ageV[i]
if(is.na(bmonth)){
age.months <- age*12
}
else if(cmonth==bmonth){
age.months <- (cyear - byear)*12
}else if(cmonth>bmonth){
age.months <- (cyear - byear)*12 + (cmonth-bmonth)
}else if(cmonth<bmonth){
age.months <- ((cyear - byear) - 1)*12 + (12 - (bmonth-cmonth))
}
if(!is.na(age.months)){
if(age.months<0){
age.months <- 0
}
}
age.monthsV <- c(age.monthsV,age.months)
}
return(age.monthsV)
}
ch$tb1m_a_p[which(ch$tb1m_a_p<0)] <- NA
ch$cfps2012_age[which(ch$cfps2012_age<0)] <- NA
ch$age.months <- code.age.months(ch$cyear,ch$cmonth,ch$cfps2012_birthy_best,ch$tb1m_a_p,ch$cfps2012_age)
names(ch)[which(names(ch)=="wa103")] <- "weight.kg"
ch$weight.kg[which(ch$weight.kg<0)] <- NA
ch$weight.kg <- ch$weight.kg/2
names(ch)[which(names(ch)=="wa104")] <- "height.cm"
ch$height.cm[which(ch$height.cm<0)] <- NA
ch <- subset(ch,age.months<=60)
names(ch)[which(names(ch)=="cfps2012_gender")] <- "gender"
ch$gender <- unfactor(ch$gender)
ch$gender[which(ch$gender=="NA")] <- NA
ch$gender[which(ch$gender=="Male")] <- 1
ch$gender[which(ch$gender=="Female")] <- 2
names(ch)[which(names(ch)=="rswt_natcs12")] <- "weights"
ch$weights <- ch$weights/100000
names(ch)[which(names(ch)=="cfps2012_age")] <- "age"
names(ch)[which(names(ch)=="cid")] <- "cluster"
names(ch)[which(names(ch)=="fid12")] <- "household"
ch <- ch[complete.cases(ch[c("weight.kg","height.cm","age.months","gender","weights")]),]
keep <- c("cluster","household","pid","weight.kg","height.cm","age.months","gender","weights","age")
ch <- ch[keep]
describe(ch$age)
igu.dir <- "D:/Documents/igrowup_R/"
weianthro<-read.table(paste0(igu.dir,"/weianthro.txt"),header=T,sep="",skip=0)
lenanthro<-read.table(paste0(igu.dir,"/lenanthro.txt"),header=T,sep="",skip=0)
bmianthro<-read.table(paste0(igu.dir,"/bmianthro.txt"),header=T,sep="",skip=0)
hcanthro<-read.table(paste0(igu.dir,"/hcanthro.txt"),header=T,sep="",skip=0)
acanthro<-read.table(paste0(igu.dir,"/acanthro.txt"),header=T,sep="",skip=0)
ssanthro<-read.table(paste0(igu.dir,"/ssanthro.txt"),header=T,sep="",skip=0)
tsanthro<-read.table(paste0(igu.dir,"/tsanthro.txt"),header=T,sep="",skip=0)
wflanthro<-read.table(paste0(igu.dir,"/wflanthro.txt"),header=T,sep="",skip=0)
wfhanthro<-read.table(paste0(igu.dir,"/wfhanthro.txt"),header=T,sep="",skip=0)
source(paste0(igu.dir,"igrowup_standard.r"))
source(paste0(igu.dir,"igrowup_restricted.r"))
igrowup.restricted(FileLab="ch",FilePath=igu.dir,
mydf=ch, sex=gender
, age=age.months, age.month=TRUE
, weight=weight.kg
, lenhei=height.cm
, sw=weights)
igu.dir <- "D:/Documents/igrowup_R/"
weianthro<-read.table(paste0(igu.dir,"/weianthro.txt"),header=T,sep="",skip=0)
lenanthro<-read.table(paste0(igu.dir,"/lenanthro.txt"),header=T,sep="",skip=0)
bmianthro<-read.table(paste0(igu.dir,"/bmianthro.txt"),header=T,sep="",skip=0)
hcanthro<-read.table(paste0(igu.dir,"/hcanthro.txt"),header=T,sep="",skip=0)
acanthro<-read.table(paste0(igu.dir,"/acanthro.txt"),header=T,sep="",skip=0)
ssanthro<-read.table(paste0(igu.dir,"/ssanthro.txt"),header=T,sep="",skip=0)
tsanthro<-read.table(paste0(igu.dir,"/tsanthro.txt"),header=T,sep="",skip=0)
wflanthro<-read.table(paste0(igu.dir,"/wflanthro.txt"),header=T,sep="",skip=0)
wfhanthro<-read.table(paste0(igu.dir,"/wfhanthro.txt"),header=T,sep="",skip=0)
source(paste0(igu.dir,"igrowup_standard.r"))
source(paste0(igu.dir,"igrowup_restricted.r"))
igrowup.restricted(FileLab="ch",FilePath=igu.dir,
mydf=ch, sex=gender
, age=age.months, age.month=TRUE
, weight=weight.kg
, lenhei=height.cm
, sw=weights)
igu.dir <- "D:/Documents/igrowup_R/"
weianthro<-read.table(paste0(igu.dir,"/weianthro.txt"),header=T,sep="",skip=0)
lenanthro<-read.table(paste0(igu.dir,"/lenanthro.txt"),header=T,sep="",skip=0)
bmianthro<-read.table(paste0(igu.dir,"/bmianthro.txt"),header=T,sep="",skip=0)
hcanthro<-read.table(paste0(igu.dir,"/hcanthro.txt"),header=T,sep="",skip=0)
acanthro<-read.table(paste0(igu.dir,"/acanthro.txt"),header=T,sep="",skip=0)
ssanthro<-read.table(paste0(igu.dir,"/ssanthro.txt"),header=T,sep="",skip=0)
tsanthro<-read.table(paste0(igu.dir,"/tsanthro.txt"),header=T,sep="",skip=0)
wflanthro<-read.table(paste0(igu.dir,"/wflanthro.txt"),header=T,sep="",skip=0)
wfhanthro<-read.table(paste0(igu.dir,"/wfhanthro.txt"),header=T,sep="",skip=0)
source(paste0(igu.dir,"igrowup_standard.r"))
source(paste0(igu.dir,"igrowup_restricted.r"))
igrowup.restricted(FileLab="ch",FilePath=igu.dir,
mydf=ch, sex=gender
, age=age.months, age.month=TRUE
, weight=weight.kg
, lenhei=height.cm
, sw=weights)
igu.dir <- "~/igrowup_R/"
weianthro<-read.table(paste0(igu.dir,"/weianthro.txt"),header=T,sep="",skip=0)
lenanthro<-read.table(paste0(igu.dir,"/lenanthro.txt"),header=T,sep="",skip=0)
bmianthro<-read.table(paste0(igu.dir,"/bmianthro.txt"),header=T,sep="",skip=0)
hcanthro<-read.table(paste0(igu.dir,"/hcanthro.txt"),header=T,sep="",skip=0)
acanthro<-read.table(paste0(igu.dir,"/acanthro.txt"),header=T,sep="",skip=0)
ssanthro<-read.table(paste0(igu.dir,"/ssanthro.txt"),header=T,sep="",skip=0)
tsanthro<-read.table(paste0(igu.dir,"/tsanthro.txt"),header=T,sep="",skip=0)
wflanthro<-read.table(paste0(igu.dir,"/wflanthro.txt"),header=T,sep="",skip=0)
wfhanthro<-read.table(paste0(igu.dir,"/wfhanthro.txt"),header=T,sep="",skip=0)
source(paste0(igu.dir,"igrowup_standard.r"))
source(paste0(igu.dir,"igrowup_restricted.r"))
igrowup.restricted(FileLab="ch",FilePath=igu.dir,
mydf=ch, sex=gender
, age=age.months, age.month=TRUE
, weight=weight.kg
, lenhei=height.cm
, sw=weights)
zscores <- read.csv(paste0(igu.dir,"ch_z_rc.csv"))
names(zscores)
p <- ggplot(zscores,aes(x=weight.kg,y=height.cm,color=age))
p + geom_point()
p <- ggplot(zscores,aes(x=weight.kg,y=height.cm,color=age.months))
p + geom_point()
p + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p <- ggplot(zscores,aes(x=weight.kg,y=height.cm,color=age)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=age.months,y=height.cm,color=weight.kg)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
describe(zscores$weight.kg)
p <- ggplot(zscores,aes(x=weight.kg,y=age.months,color=height.cm)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=height.cm,y=weight.kg,color=height.cm)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=age.months,y=weight.kg,color=height.cm)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=age.months,y=height.cm,color=weight.kg)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=age.months,y=height.cm,z=weight.kg)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
p <- ggplot(zscores,aes(x=age.months,y=height.cm,color=weight.kg)) + geom_point() + ggtitle("Weight (kg), height (cm), and age (months), CFPS 2012")
p
dat <- read.csv("/Users/Alex/Downloads/data.csv",na.strings="",as.is=TRUE)
View(dat)
library(ggplot2)
library(scales)
ggplot(dat,aes(x=mc.oda,y=cases,size=health.exp,colour=Region)) + geom_point(alpha=0.75) +
labs(x="Malaria control ODA"
,y="Reported malaria cases"
,title="Malaria ODA spending vs. Health outcomes"
,size="Health expenditure per capita"
,colour="Region"
) +
theme_bw() + scale_size(range=c(1,15)) + scale_y_log10(labels = comma) +
scale_x_log10(labels = comma)
ggplot(dat,aes(x=mc.oda,y=health.exp,size=cases,colour=Region)) + geom_point(alpha=0.75) +
labs(x="Malaria control ODA"
,y="Health expenditure per capita"
,title="Malaria ODA spending vs. Health outcomes"
,size="Reported malaria cases"
,colour="Region"
) +
theme_bw() + scale_size(range=c(1,15)) + scale_y_log10(labels = comma) +
scale_x_log10(labels = comma)
unique(dat$year)
ggplot(subset(dat,year==2014),aes(x=mc.oda,y=health.exp,size=cases,colour=Region)) + geom_point(alpha=0.75) +
labs(x="Malaria control ODA"
,y="Health expenditure per capita"
,title="Malaria ODA spending vs. Health outcomes"
,size="Reported malaria cases"
,colour="Region"
) +
theme_bw() + scale_size(range=c(1,15)) + scale_y_log10(labels = comma) +
scale_x_log10(labels = comma)
library(zoo)
install.packages("zoo")
library(zoo)
?na.approx
?approx
wd <- "~/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-","--")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
mult <- read.csv("~/git/digital-platform/reference/imf_weo_ncu_deflator.2015.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(mult)[3] <- c("deflator")
mult$deflator[which(mult$id=="SY")] <- 1
ppp <- read.csv("~/git/digital-platform/reference/current-ncu-to-current-ppp.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(ppp)[3] <- "ppp"
sy.ppp <- subset(ppp,id=="SY")
ppp <- subset(ppp,year==2015 & id!="SY")
ppp$year <- NULL
somalia.ppp <- data.frame("id"="SO","ppp"=1)
ppp <- rbind(ppp,somalia.ppp)
years <- c(1980:2021)
ppp.frame <- data.frame("id"=sort(rep(ppp$id,length(years))),"year"=years)
ppp <- merge(ppp.frame,ppp,by="id")
ppp <- rbind(ppp,sy.ppp)
usd <- read.csv("~/git/digital-platform/reference/current-ncu-to-current-usd.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(usd)[3] <- "usd"
sy.usd <- subset(usd,id=="SY")
usd <- subset(usd,year==2015 & id!="SY")
usd$year <- NULL
somalia.usd <- data.frame("id"="SO","usd"=1)
usd <- rbind(usd,somalia.usd)
years <- c(1980:2021)
usd.frame <- data.frame("id"=sort(rep(usd$id,length(years))),"year"=years)
usd <- merge(usd.frame,usd,by="id")
usd <- rbind(usd,sy.usd)
mult <- merge(mult,ppp,by=c("id","year"))
mult <- merge(mult,usd,by=c("id","year"))
mult$mult.ppp <- mult$deflator/mult$ppp
mult$mult.usd <- mult$deflator*mult$usd
mult$deflator <- NULL
mult$ppp <- NULL
mult$usd <- NULL
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
df <- merge(
df
,mult
,by=c("id","year")
,all.x=TRUE
)
View(df)
library(plyr)
df <- join(
df
,mult
,by=c("id","year")
,all.x=TRUE
)
?join
df <- join(
df
,mult
,by=c("id","year")
)
names(df)
df$iso
wd <- "~/git/alexm-util/DevInit/budgetLevels"
setwd(wd)
df <- read.csv("./results.csv"
, header = TRUE
,sep=","
,na.strings=c("","-","--")
,check.names=FALSE
,stringsAsFactors=FALSE
,colClasses = c("character","character","numeric",
"character","character","character",
"character","character","character",
"character","character","numeric")
)
names(df)[names(df) == "iso"] <- "id"
mult <- read.csv("~/git/digital-platform/reference/imf_weo_ncu_deflator.2015.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(mult)[3] <- c("deflator")
mult$deflator[which(mult$id=="SY")] <- 1
#Have a PPP conversion for every year, but equal to 2015 rate for all years for all countries except for Syria
ppp <- read.csv("~/git/digital-platform/reference/current-ncu-to-current-ppp.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(ppp)[3] <- "ppp"
sy.ppp <- subset(ppp,id=="SY")
ppp <- subset(ppp,year==2015 & id!="SY")
ppp$year <- NULL
somalia.ppp <- data.frame("id"="SO","ppp"=1)
ppp <- rbind(ppp,somalia.ppp)
years <- c(1980:2021)
ppp.frame <- data.frame("id"=sort(rep(ppp$id,length(years))),"year"=years)
ppp <- merge(ppp.frame,ppp,by="id")
ppp <- rbind(ppp,sy.ppp)
usd <- read.csv("~/git/digital-platform/reference/current-ncu-to-current-usd.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
names(usd)[3] <- "usd"
sy.usd <- subset(usd,id=="SY")
usd <- subset(usd,year==2015 & id!="SY")
usd$year <- NULL
somalia.usd <- data.frame("id"="SO","usd"=1)
usd <- rbind(usd,somalia.usd)
years <- c(1980:2021)
usd.frame <- data.frame("id"=sort(rep(usd$id,length(years))),"year"=years)
usd <- merge(usd.frame,usd,by="id")
usd <- rbind(usd,sy.usd)
mult <- merge(mult,ppp,by=c("id","year"))
mult <- merge(mult,usd,by=c("id","year"))
mult$mult.ppp <- mult$deflator/mult$ppp
mult$mult.usd <- mult$deflator*mult$usd
mult$deflator <- NULL
mult$ppp <- NULL
mult$usd <- NULL
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
df <- merge(
df
,mult
,by=c("id","year")
,all.x=TRUE
)
df <- transform(df,value.ppp=mult.ppp*value.ncu)
df <- transform(df,value=mult.usd*value.ncu)
df <- transform(df,l1=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l1))))
df <- transform(df,l2=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l2))))
df <- transform(df,l3=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l3))))
df <- transform(df,l4=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l4))))
df <- transform(df,l5=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l5))))
df <- transform(df,l6=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", l6))))
keep <- c(1,2,5,6,7,8,9,10,11,12,13,16)
df <- df[keep]
names(df)[names(df) == "value.ncu"] <- "value-ncu"
names(df)[names(df) == "value.ppp"] <- "value-ppp"
names(df)[names(df) == "type"] <- "budget-type"
write.csv(df,"~/git/digital-platform/country-year/domestic-gha.csv",row.names=FALSE,na="")
names(df)
df <- read.csv("./results.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(levels),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
levels <- df[c(6:11)]
levels <- reshape(
levels
,varying=1:6
,sep=""
,direction="long")
levels <- levels[c(1,2)]
names(levels) <- c("level","name")
levels <- unique(levels)[complete.cases(unique(levels)),]
levels <- transform(levels,id=gsub(" ","-",tolower(gsub("[^[:alnum:] ]", "", name))))
levels$sectoral <- "FALSE"
levels <- levels[c(3,4,1,2)]
old.levels <- read.csv("~/git/digital-platform/reference/domestic-budget-level.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
sectoral <- subset(old.levels,sectoral==TRUE)
old.levels <- old.levels[c(1,2,3,5)]
levels <- merge(
levels
,old.levels
,by=intersect(names(levels),names(old.levels))
,all.x=TRUE
)
levels <- levels[order(levels$id)[!duplicated(sort(levels$id))],]
new.levels <- rbind(levels,sectoral)
new.levels <- unique(new.levels)
write.csv(new.levels,"~/git/digital-platform/reference/domestic-budget-level-gha.csv",row.names=FALSE,na="")
